{"version":3,"sources":["webpack:///./src/trainings/training.js","webpack:///./src/trainings/NFB004.js","webpack:///./config/theme.json","webpack:///./src/components/hourglass.js","webpack:///./src/components/scorer.js","webpack:///./src/components/sounds/correctsound.js","webpack:///./src/components/sounds/wrongsound.js","webpack:///./src/components/memoryscorer.js","webpack:///./src/components/twentygrid.js","webpack:///./src/components/sounds/flashsound.js"],"names":[],"mappings":";;;;;AAAA;AAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,aAAa;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA,CAAC;AAAA;AAAA;;;;;;;;;ACtBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACS;AACI;AACP;AACJ;AACO;AACd;;AAElD;AACA;AACA;AACA,cAAc,UAAU;AACxB,cAAc,aAAa;AAC3B,cAAc,WAAW;AACzB,cAAc,WAAW;AACzB,cAAc,aAAa;AAC3B,cAAc,WAAW;AACzB,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,WAAW;AACzB,cAAc,WAAW;AACzB;;AAEA,yBAAyB,IAAI,OAAO;;AAEpC;AACA;AACA;AACA,qBAAqB,gDAAK;AAC1B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,2EAAS,wBAAwB,wEAAwE;AAClI,4BAA4B,iFAAY;AACxC,0BAA0B,oFAAU;AACpC,4BAA4B,wFAAY;AACxC,0BAA0B,oFAAU;AACpC,0BAA0B,6EAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEO,qBAAqB,sDAAQ;;AAEpC,YAAY,iBAAiB;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,SAAS,wBAAwB;AACjC,mBAAmB;AACnB,uBAAuB;AACvB;AACA;AACA;AACA,CAAC;AAAA;AAAA;;;;;;;;;;;;;AC3RD,kBAAkB,SAAS,ofAAof,WAAW,iDAAiD,YAAY,qBAAqB,SAAS,kEAAkE,UAAU,+BAA+B,WAAW,YAAY,WAAW,mEAAmE,WAAW,sHAAsH,WAAW,yBAAyB,WAAW,YAAY,WAAW,YAAY,WAAW,YAAY,WAAW,mEAAmE,WAAW,YAAY,WAAW,8BAA8B,WAAW,4GAA4G,WAAW,yCAAyC,gFAAgF,WAAW,mFAAmF,WAAW,sFAAsF,WAAW,yFAAyF,WAAW,iFAAiF,WAAW,qFAAqF,WAAW,2DAA2D,gFAAgF,WAAW,oGAAoG,WAAW,4GAA4G,WAAW,YAAY,WAAW,YAAY,WAAW,YAAY,WAAW,6HAA6H,WAAW,YAAY,WAAW,YAAY,WAAW,YAAY,WAAW,YAAY,WAAW,4BAA4B,4CAA4C,EAAE,8CAA8C,EAAE,+CAA+C,EAAE,4CAA4C,EAAE,+CAA+C,EAAE,4CAA4C,EAAE,WAAW,YAAY,WAAW,YAAY,WAAW,YAAY,WAAW,YAAY,WAAW,YAAY,WAAW,YAAY,WAAW,4BAA4B,6CAA6C,EAAE,+CAA+C,EAAE,6CAA6C,G;;;;;;;ACA7rG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB;AACA;AACO;;AAEP;AACA;AACA,aAAa,GAAG;AAChB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA,sCAAsC,yCAAyC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,CAAC;AAAA;AAAA;;;;;;;;;;;;;;;;AC1ID;AACA;AACA,cAAc,MAAM;AACpB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,IAAI;AACjB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,IAAI;AACjB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,IAAI;AACjB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA,CAAC;AAAA;AAAA;;;;;;;;ACnHD;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,cAAc;AAC5B,cAAc,MAAM;AACpB,cAAc,UAAU;AACxB,cAAc,QAAQ;AACtB;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,qBAAqB;AAC3E;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA;AAAA;;;;;;;;ACtDD;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,cAAc;AAC5B,cAAc,MAAM;AACpB,cAAc,UAAU;AACxB,cAAc,QAAQ;AACtB;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,qBAAqB;AACxE;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA;AAAA;;;;;;;;;;;;ACvDD;AAAmC;;AAEnC;AACA;AACA,cAAc,OAAO;AACrB;AACO,2BAA2B,0DAAM;;AAExC;AACA;AACA,aAAa,GAAG;AAChB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,SAAS;AACtB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,CAAC;AAAA;AAAA;;;;;;;;AC5ED;AACA;AACA,cAAc,GAAG;AACjB,cAAc,OAAO;AACrB;AACO;;AAEP;AACA;AACA;AACA;AACA,aAAa,GAAG;AAChB,aAAa,MAAM;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,aAAa;AAC1B,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,CAAC;AAAA;AAAA;;;;;;;;;ACxHD;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,cAAc;AAC5B,cAAc,MAAM;AACpB,cAAc,UAAU;AACxB,cAAc,QAAQ;AACtB;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,qBAAqB;AAC3E;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA;AAAA","file":"1.js","sourcesContent":["export class Training{\r\n\r\n  constructor(userPreference) {\r\n    /* ユーザ設定の全体 */\r\n    this.userPreference = userPreference || {};\r\n    this.result = {};\r\n    this.scoreLog = {};\r\n  }\r\n  get uid(){ return null; }\r\n\r\n  /** ユーザ設定から個別トレーニング設定を取得 */\r\n  get preference(){\r\n    return this.userPreference[this.uid] || null;\r\n  }\r\n  /** ユーザ設定に個別トレーニング設定を保存 */\r\n  set preference(preference){\r\n    this.userPreference[this.uid] = preference;\r\n  }\r\n\r\n  get response(){\r\n    return {trainingResult: this.result, userPreference: this.userPreference, scoreLog: this.scoreLog};\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/trainings/training.js\n// module id = 0\n// module chunks = 0 1 2 3","import { Training } from './training.js';\r\nimport { HourGlass } from '../components/hourglass.js';\r\nimport { WrongSound } from '../components/sounds/wrongsound.js';\r\nimport { CorrectSound } from '../components/sounds/correctsound.js';\r\nimport { MemoryScorer } from '../components/memoryscorer.js';\r\nimport { TwentyGrid } from '../components/twentygrid.js';\r\nimport { FlashSound } from '../components/sounds/flashsound.js';\r\nimport *  as theme from '../../config/theme.json';\r\n\r\n/**\r\n * [トレーニングNFB004] 順番記憶\r\n * Libries: p5, p5sound, p5dom\r\n * @property {HourGlass} hourGlass - 砂時計\r\n * @property {MemoryScorer} memoryScorer - 順番記憶・数字記憶・音階記憶用スコアラー\r\n * @property {TwentyGrid} twentyGrid - 20方眼\r\n * @property {WrongSound} wrongSound - 不正解音\r\n * @property {CorrectSound} correctSound - 正解音\r\n * @property {FlashSound} flashSound - 記号点滅音\r\n * @property {number} maxWidth - 描画する横幅\r\n * @property {boolean} isPointing - 出題中かどうか\r\n * @property {boolean} isInputBlock - 入力を無視するかどうか\r\n * @property {number} questionTimer - 出題を行うsetTimeout処理のID\r\n * @property {number} inputTimer - 入力の無視を解除するsetTimeout処理のID\r\n * @property {number} clickedTimer - クリックした後に行う処理のsetTimeoutのID\r\n * @property {number} textSize - 文字サイズ\r\n * @property {p5.Element} message - 問題メッセージ表示用p5エレメント\r\n * @property {p5.Element} judgeMessage - 状況メッセージ表示用p5エレメント\r\n */\r\n\r\nconst time_limit = 60000; //{number} トレーニングの制限時間\r\n\r\nclass SequentialMemory {\r\n  constructor(p5, preference=null) {\r\n    this.$p5 = p5;\r\n    this.$p5.theme = theme;\r\n    this.level = preference ? preference.level : parseInt(p5.theme.NFB004.level);\r\n    this.waitingForReady = new Promise((resolve, reject) => {\r\n      this.ready = resolve;\r\n    });\r\n    this.waitingForStopped = new Promise((resolve, reject) => {\r\n      this.stop = resolve;\r\n    });\r\n    this.maxWidth = (p5.windowWidth < p5.windowHeight)\r\n      ? p5.windowWidth\r\n      : p5.pow(p5.windowHeight, 2) / p5.windowWidth;\r\n    this.isPointing = true;\r\n    this.isInputBlock = true;\r\n    this.textSize = this.maxWidth / 15;\r\n  }\r\n  /* [p5] preload処理 */\r\n  preload() {\r\n    if (this.$p5.theme.font)\r\n      this.font = this.$p5.loadFont(this.$p5.theme.font.path);\r\n  }\r\n\r\n  /* [p5] setup処理 */\r\n  setup() {\r\n    this.$p5.createCanvas(this.$p5.windowWidth, this.$p5.windowHeight);\r\n    this.$p5.frameRate(30);\r\n    this.$p5.noLoop();\r\n    if (this.$p5.theme.font)\r\n      this.$p5.textFont(this.font);\r\n\r\n    this.hourGlass = new HourGlass(this.$p5, time_limit, {isReturnEnable:this.$p5.theme.option.isReturnEnable, isChangeColor:true});\r\n    this.memoryScorer = new MemoryScorer();\r\n    this.wrongSound = new WrongSound(this.$p5);\r\n    this.correctSound = new CorrectSound(this.$p5);\r\n    this.flashSound = new FlashSound(this.$p5);\r\n    this.twentyGrid = new TwentyGrid(\r\n      this.$p5,\r\n      [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n      {\r\n        mouseClicked: (e) => {\r\n          if (this.isInputBlock) return;\r\n          this.twentyGridPressed(Number(e.currentTarget.id));\r\n        }\r\n      }\r\n    );\r\n\r\n    this.message = this.$p5.createDiv(\"\")\r\n      .style(\"position\", \"fixed\")\r\n      .style(\"font-size\", this.textSize + 'px')\r\n      .style('width', '50vw')\r\n      .style(\"color\", this.$p5.theme.color.primaryText)\r\n      .style('text-align', 'center')\r\n      .style('margin', 'auto')\r\n      .style('top', '30vh')\r\n      .html(\"点滅した順に<br>タッチしてください\")\r\n    ;\r\n    this.judgeMessage = this.$p5.createDiv(\"\")\r\n      .style(\"position\", \"fixed\")\r\n      .style(\"font-size\", this.textSize*2 + 'px')\r\n      .style('width', '50vw')\r\n      .style('height', '10vh')\r\n      .style('color', this.$p5.theme.color.primaryText)\r\n      .style('text-align', 'center')\r\n      .style('margin', 'auto')\r\n      .style('top', '50vh')\r\n      // .style('font-weight', 'bold')\r\n      .html(\"出題中です\")\r\n    ;\r\n\r\n    window.App.state = 'ready';\r\n    this.ready();\r\n  }\r\n\r\n  mousePressed() {\r\n    return false;\r\n  }\r\n\r\n  /* スタートボタン押下 */\r\n  start() {\r\n    this.hourGlass.start();\r\n    /* 最初の問題を生成 */\r\n    this.memoryScorer.addCorrect(Math.floor(Math.random() * 20));\r\n    this.isInputBlock = true;\r\n    /* 1秒後に出題 */\r\n    this.questionTimer = setTimeout(() => {\r\n      this.isPointing = true;\r\n      this.twentyGrid.flashCorrects(this.memoryScorer.corrects, this.flashSound, this.$p5.theme.NFB004.marker, this.level);\r\n    }, 1000);\r\n    /* 問題の点滅が終わるとクリック可能に */\r\n    this.inputTimer = setTimeout(() => {\r\n      this.judgeMessage.html(\"GO！！\");\r\n      this.isPointing = false;\r\n      this.isInputBlock = false;\r\n      this.memoryScorer.rapTime = Date.now();\r\n    }, 750 * this.level + (this.memoryScorer.corrects.length * (1000 / this.level + 500)));\r\n  }\r\n\r\n  /* [p5] draw処理 */\r\n  draw() {\r\n    this.$p5.noCanvas();\r\n    this.$p5.createCanvas(this.$p5.windowWidth,this.$p5.windowHeight);\r\n    if (this.hourGlass) this.hourGlass.renderGlass();\r\n\r\n    /* 入力可能かどうかにあわせて20方眼の色を変更 */\r\n    this.$p5.select(\"#twentygrid\").child().forEach((value,index) => {\r\n      if (this.isPointing) {\r\n        this.$p5.select(\"#\" + value.id).style('background-color', '#aaa');\r\n      } else {\r\n        this.$p5.select(\"#\" + value.id).style('background-color', '#fff');\r\n      }\r\n    });\r\n\r\n    /* メッセージの表示 */\r\n    this.$p5.textAlign(this.$p5.CENTER);\r\n    this.$p5.textSize(this.textSize);\r\n    this.$p5.textStyle(this.$p5.BOLD);\r\n    this.$p5.fill(80);\r\n\r\n    if (!this.hourGlass.isOver || this.memoryScorer.isPerfect) return;\r\n    /* 終了処理 */\r\n    this.correctSound.stopSound();\r\n    this.wrongSound.stopSound();\r\n    this.flashSound.stopSound();\r\n    clearTimeout(this.questionTimer);\r\n    clearTimeout(this.inputTimer);\r\n    clearTimeout(this.clickedTimer);\r\n    this.$p5.noLoop();\r\n    this.twentyGrid.isOver = true;\r\n    /* 難易度を設定 */\r\n    let l = this.level;\r\n    // if (this.memoryScorer.score >= 10 && this.level < 3) {\r\n    //   l += 1;\r\n    // }\r\n    // if (this.memoryScorer.score <= 5 && this.level > 1) {\r\n    //   l -= 1;\r\n    // }\r\n\r\n    const scoreLog = {\r\n      isCorrects: this.memoryScorer.isCorrects,\r\n      responseTimes: this.memoryScorer.responseTimes\r\n    };\r\n\r\n    this.$p5.remove();\r\n    this.stop({\r\n      rawScore: this.memoryScorer.score,\r\n      level: l,\r\n      scoreLog: scoreLog\r\n    });\r\n  }\r\n\r\n  twentyGridPressed(letter) {\r\n    this.twentyGrid.flashPoint(letter, 300, this.$p5.theme.NFB004.marker);\r\n    /* 正誤判定 */\r\n    const isCorrect = this.memoryScorer.isCorrectCount(letter);\r\n    this.memoryScorer.addResponseTime();\r\n    this.memoryScorer.isCorrects.push(isCorrect);\r\n    this.memoryScorer.rapTime = Date.now();\r\n\r\n    if (isCorrect) {\r\n      /* 正解の場合 */\r\n      this.memoryScorer.plusCorrectCount();\r\n      this.flashSound.playSound();\r\n      if (!this.memoryScorer.isAllAnswered()) return;\r\n      /* 出題された点をすべてをクリックし終わった場合 */\r\n      this.memoryScorer.addCorrect(Math.floor(Math.random() * 20)); //問題の数を1つ増やす\r\n      this.memoryScorer.resetCount();\r\n      this.clickedTimer = setTimeout(() => {\r\n        this.correctSound.playSound();\r\n        /* 方眼の色を正解色に */\r\n        Array.prototype.forEach.call(document.getElementsByClassName(\"ripple\"), (button)=>{\r\n          button.style.outlineColor = this.$p5.theme.color.accent;\r\n          button.style.color = this.$p5.theme.color.accent;\r\n        });\r\n        clearTimeout(this.animTimer);\r\n        this.animTimer = setTimeout(()=>{\r\n          Array.prototype.forEach.call(document.getElementsByClassName(\"ripple\"), (button)=>{\r\n            button.style.outlineColor = this.$p5.theme.color.domKeyOutline;\r\n            button.style.color = this.$p5.theme.color.domKeyOutline;\r\n          });\r\n        }, 300);\r\n      }, 350);\r\n      /* 問題を出題 */\r\n      this.isInputBlock = true;\r\n      this.questionTimer = setTimeout(() => {\r\n        this.judgeMessage.html(\"出題中です\").style(\"font-size\", this.textSize*2 + 'px');\r\n        this.isPointing = true;\r\n        this.twentyGrid.flashCorrects(this.memoryScorer.corrects, this.flashSound, this.$p5.theme.NFB004.marker, this.level);\r\n      }, 1500);\r\n      /* 問題の点滅が終わるとクリック可能に */\r\n      this.inputTimer = setTimeout(() => {\r\n        this.judgeMessage.html(\"GO！！\");\r\n        this.isPointing = false;\r\n        this.isInputBlock = false;\r\n        this.memoryScorer.rapTime = Date.now();\r\n      }, 1000 * this.level + (this.memoryScorer.corrects.length * (1000 / this.level + 500)));\r\n    } else {\r\n      /* 不正解の場合 */\r\n      this.wrongSound.playSound();\r\n      this.judgeMessage.html(\"×\").style(\"font-size\", '10vh');\r\n      this.clickedTimer = setTimeout(() => {\r\n        this.memoryScorer.isPerfect = false;\r\n      }, 500);\r\n      if (App.isAndroid && this.$p5.theme.option.vibe===\"on\") {\r\n        Android.vibeWrong();\r\n      }\r\n      if (this.hourGlass.isOver)\r\n        return;\r\n      /* 問題を破棄し、新たに1つの問題を生成 */\r\n      this.memoryScorer.formatCorrect();\r\n      this.memoryScorer.addCorrect(Math.floor(Math.random() * 20));\r\n      this.memoryScorer.resetCount();\r\n      this.isInputBlock = true;\r\n      /* 問題を出題 */\r\n      this.questionTimer = setTimeout(() => {\r\n        this.judgeMessage.html(\"出題中です\").style(\"font-size\", this.textSize*2 + 'px');\r\n        this.isPointing = true;\r\n        this.twentyGrid.flashCorrects(this.memoryScorer.corrects, this.flashSound, this.$p5.theme.NFB004.marker, this.level);\r\n      }, 1500);\r\n      /* 問題の点滅が終わるとクリック可能に */\r\n      this.inputTimer = setTimeout(() => {\r\n        this.judgeMessage.html(\"GO！！\");\r\n        this.isPointing = false;\r\n        this.isInputBlock = false;\r\n        this.memoryScorer.rapTime = Date.now();\r\n      }, 1000 * this.level + (this.memoryScorer.corrects.length * (1000 / this.level + 500)));\r\n    }\r\n  }\r\n}\r\n\r\nexport class NFB004 extends Training{\r\n\r\n  get uid(){ return 'NFB004'; }\r\n\r\n  async start() {\r\n    new p5(($p5) => {\r\n      this.training = new SequentialMemory($p5, this.preference);\r\n      $p5.preload = this.training.preload.bind(this.training);\r\n      $p5.setup = this.training.setup.bind(this.training);\r\n      $p5.draw = this.training.draw.bind(this.training);\r\n      $p5.mousePressed = this.training.mousePressed.bind(this.training);\r\n    }, \"main\");\r\n    await this.training.waitingForReady;\r\n\r\n    this.training.start();\r\n    let {rawScore,level,scoreLog} = await this.training.waitingForStopped;\r\n    this.result = {rawScore};\r\n    this.preference = {level};\r\n    this.scoreLog = scoreLog;\r\n    return this.response;\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/trainings/NFB004.js\n// module id = 2\n// module chunks = 1","module.exports = {\"color\":{\"primary\":\"#ffe600\",\"secondary\":\"#ed7229\",\"positioner\":\"#ffffff\",\"positionerLight\":\"#ffffff\",\"positionerText\":\"#505050\",\"positionerPushedText\":\"#dfdfdf\",\"domKeyOutline\":\"#505050\",\"domKeyText\":\"#505050\",\"domKeyBackground\":\"#ffffff\",\"pushableFlash\":\"#ff0000\",\"insideCircle\":\"#e6e6e6\",\"outsideCircle\":\"#c8c8c8\",\"accent\":\"#37b595\",\"primaryText\":\"#606060\",\"secondaryText\":\"#424242\",\"accentText\":\"#000000\",\"background\":\"#ffffff\",\"empty\":\"#dfdfdf\",\"shadow\":\"#c5c5c6\",\"circles\":\"#ed7769\",\"crosses\":\"#22587a\"},\"option\":{\"vibe\":\"off\",\"sound\":\"on\",\"isReturnEnable\":false},\"tengrid\":{\"borderRadius\":\"0px\"},\"font\":{\"family\":\"LocalFont\",\"path\":\"./assets/font/mplus-1p-regular.woff\"},\"pulse\":{\"images\":null,\"ballImage\":null},\"NFB001\":{\"level\":\"2\"},\"NFB002\":{\"level\":\"2\",\"symbolList\":[\"〇\",\"☆\",\"▽\",\"■\",\"◇\",\"×\",\"△\",\"※\",\"◎\",\"□\"]},\"NFB003\":{\"level\":\"2\",\"pushList\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\"]]},\"NFB004\":{\"level\":\"3\",\"marker\":\"●\"},\"NFB005\":{\"level\":\"4\"},\"NFB006\":{\"level\":\"4\"},\"NFB007\":{\"level\":\"1\"},\"NFB008\":{\"level\":\"1\",\"symbolList\":[\"〇\",\"☆\",\"▽\",\"■\",\"◇\",\"×\",\"△\",\"※\",\"◎\",\"□\"]},\"NFB009\":{\"level\":\"1\"},\"NFB010\":{\"level\":\"3\",\"threshold\":\"500\"},\"NFB011\":{\"level\":\"2\",\"threshold\":\"500\",\"isUseImage\":true,\"iconfont\":\"tag_faces\",\"imagePath\":\"assets/image/face1.png\"},\"NFB012\":{\"level\":\"1\",\"isUseImage\":false,\"image1\":{\"iconfont\":\"tag_faces\",\"imagePath\":\"./assets/image/push1.png\",\"isPositive\":true},\"image2\":{\"iconfont\":\"tag_faces\",\"imagePath\":\"./assets/image/unpush1.png\",\"isPositive\":false},\"image3\":{\"iconfont\":\"brightness_high\",\"imagePath\":\"./assets/image/push2.png\",\"isPositive\":true},\"image4\":{\"iconfont\":\"brightness_high\",\"imagePath\":\"./assets/image/unpush2.png\",\"isPositive\":false},\"image5\":{\"iconfont\":\"bug_report\",\"imagePath\":\"./assets/image/push3.png\",\"isPositive\":true},\"image6\":{\"iconfont\":\"bug_report\",\"imagePath\":\"./assets/image/unpush3.png\",\"isPositive\":false}},\"NFB013\":{\"level\":\"1\",\"threshold\":\"1000\",\"isUseImage\":true,\"image1\":{\"iconfont\":\"tag_faces\",\"imagePath\":\"./assets/image/face1.png\",\"isPositive\":true},\"image2\":{\"iconfont\":\"sentiment_very_dissatisfied\",\"imagePath\":\"./assets/image/face2.png\",\"isPositive\":false}},\"NFB014\":{\"level\":\"1\",\"pushList\":[[\"1\",\"あ\",\"2\",\"い\",\"3\",\"う\",\"4\",\"え\",\"5\",\"お\",\"6\",\"か\",\"7\",\"き\",\"8\",\"く\",\"9\",\"け\",\"10\",\"こ\"]]},\"NFB015\":{\"level\":\"1\"},\"NFB016\":{\"level\":\"1\"},\"NFB017\":{\"level\":\"1\"},\"NFB018\":{\"level\":\"1\",\"threshold\":\"1000\",\"isUseImage\":false,\"iconfont\":\"star\",\"imagePath\":\"./assets/image/face1.png\",\"isPositive\":true},\"NFB019\":{\"level\":\"1\"},\"NFB020\":{\"level\":\"1\"},\"NFB021\":{\"level\":\"1\"},\"NFB022\":{\"level\":\"1\"},\"NFB023\":{\"level\":\"1\",\"flowingList\":[{\"name\":\"犬\",\"image\":\"./assets/image/dog.png\"},{\"name\":\"馬\",\"image\":\"./assets/image/horse.png\"},{\"name\":\"猿\",\"image\":\"./assets/image/monkey.png\"},{\"name\":\"猫\",\"image\":\"./assets/image/cat.png\"},{\"name\":\"兎\",\"image\":\"./assets/image/rabbit.png\"},{\"name\":\"鼠\",\"image\":\"./assets/image/rat.png\"}]},\"NFB024\":{\"level\":\"1\"},\"NFB025\":{\"level\":\"1\"},\"NFB026\":{\"level\":\"1\"},\"NFB027\":{\"level\":\"1\"},\"NFB028\":{\"level\":\"1\"},\"NFB029\":{\"level\":\"1\"},\"NFB030\":{\"level\":\"1\",\"flowingList\":[{\"name\":\"いぬ\",\"image\":\"./assets/image/dog.png\"},{\"name\":\"うま\",\"image\":\"./assets/image/horse.png\"},{\"name\":\"ねこ\",\"image\":\"./assets/image/cat.png\"}]}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/theme.json\n// module id = 9\n// module chunks = 0 1 2 4 5 6","const fully = '#66CC33';\r\nconst half = '#FFD400';\r\nconst scanty = '#FF3300';\r\nconst elapsed = '#848484';\r\n\r\n/**\r\n * 砂時計\r\n * Libries: p5\r\n * @property {number} startMillis - 開始タイミング\r\n * @property {number} timeLimit - 制限時間\r\n * @property {number} vh - ディスプレイの高さの1/100\r\n * @property {number} vw - ディスプレイの幅の1/100\r\n * @property {number} short - vhとvwの短い方\r\n * @property {boolean} isStart - スタートボタンが押されたかどうか\r\n *\r\n */\r\nexport class HourGlass {\r\n\r\n  /**\r\n   * 初期表示\r\n   * @param {p5} p\r\n   * @param {number} timeLimit - 制限時間\r\n   * @param {boolean} [isReturnEnable] - 戻るボタンの表示の有無\r\n   */\r\n  constructor(p, timeLimit, option = {isReturnEnable:false, isChangeColor:true}) {\r\n    this.p5 = p;\r\n    this.timeLimit = timeLimit;\r\n    this.option = option;\r\n    let shortView = p.windowHeight > p.windowWidth\r\n      ? 'vw'\r\n      : 'vh';\r\n    this.secGlass = new Date(this.timeLimit + this.startMillis - this.p5.millis());\r\n\r\n    // let div = p.createDiv('');\r\n    // div.id(\"hourglass\")\r\n    //   .style('position', 'fixed')\r\n    //   .style('top','10vw')\r\n    //   // .style('top', '7vw')\r\n    //   .style('left', '7vw')\r\n    //   .style('font-size', '3.5vw')\r\n    //   // .style('background-color', '#fff')\r\n    //   // .style('color', '#616161')\r\n    //   .style('width', '11vw')\r\n    //   .style('height', '11vw')\r\n    //   .style('border-radius', '50%')\r\n    //   .style('display', 'flex')\r\n    //   .style('align-items', 'center')\r\n    //   .style('justify-content', 'center')\r\n    //   .html(\"戻る\")\r\n    // ;\r\n    if (option.isReturnEnable) {\r\n      this.div = p.createButton('戻る')\r\n        .id(\"hourglass\")\r\n        .style('position', 'fixed')\r\n        // .style('top', '10vw')\r\n        .style('top', '4' + shortView)\r\n        .style('left', '4' + shortView)\r\n        .style('font-size', '3.5' + shortView)\r\n        .style('background-color', 'transparent')\r\n        // .style('color', '#616161')\r\n        .style('width', '17' + shortView)\r\n        .style('height', '17' + shortView)\r\n        // .style('border-radius', '50%')\r\n        .style('display', 'flex')\r\n        .style('align-items', 'center')\r\n        .style('justify-content', 'center')\r\n        .style('padding-top', '7' + shortView)\r\n        .style('border-style', 'none')\r\n        .mousePressed(() => {\r\n          if (App.isAndroid) Android.redo();\r\n        })\r\n      ;\r\n    }\r\n    this.isStart = false;\r\n  }\r\n\r\n  /**\r\n   * [p5] トレーニング開始時処理\r\n   */\r\n  start() {\r\n    this.startMillis = this.p5.millis();\r\n    this.p5.loop();\r\n    this.isStart = true;\r\n  }\r\n\r\n  /**\r\n   * [p5] 砂時計を描画\r\n   */\r\n  renderGlass(isVisible = true) {\r\n    this.vh = this.p5.windowHeight / 100;\r\n    this.vw = this.p5.windowWidth / 100;\r\n    this.short = this.p5.min(this.vh, this.vw);\r\n\r\n    // const hourglass = this.p5.select(\"#hourglass\");\r\n    this.secGlass = new Date(this.timeLimit + this.startMillis - this.p5.millis());\r\n    // let nowSec = (\"0\" + this.secGlass.getSeconds()).slice(-2);\r\n    // hourglass.html(\"戻る\");\r\n    /** 外枠部分 */\r\n    this.limitSec = this.timeLimit / 1000 - this.secGlass.getSeconds() - (this.secGlass.getMilliseconds() / 1000);\r\n    if (!isVisible)\r\n      return;\r\n    this.p5.noStroke();\r\n    this.p5.fill(fully);\r\n    if (this.option.isChangeColor && (this.timeLimit / 1000) / 2 > this.secGlass.getSeconds()){\r\n      this.p5.fill(half);\r\n    }\r\n    if (this.option.isChangeColor && (this.timeLimit / 1000) / 4 > this.secGlass.getSeconds()){\r\n      this.p5.fill(scanty);\r\n    }\r\n    this.p5.ellipseMode(this.p5.CORNER);\r\n    this.p5.ellipse(4 * this.short, 4 * this.short, 17 * this.short, 17 * this.short);\r\n    // this.p5.fill('#212121');\r\n    this.p5.fill(elapsed);\r\n    let rad = (360 / (this.timeLimit / 1000)) * this.limitSec * Math.PI / 180;\r\n    let s = -90 * Math.PI / 180;\r\n    if (this.isOver) {\r\n      this.p5.arc(4 * this.short, 4 * this.short, 17 * this.short, 17 * this.short, s, s - 0.001 )\r\n    } else {\r\n      this.p5.arc(4 * this.short, 4 * this.short, 17 * this.short, 17 * this.short, s, s + rad + 0.001);\r\n    }\r\n    // if (!this.isStart){\r\n    //   this.p5.select(\"#hourglass\").html(this.timeLimit / 1000);\r\n    // }\r\n    this.p5.ellipseMode(this.p5.CENTER);\r\n  }\r\n\r\n  /**\r\n   * [p5] タイムオーバー判定\r\n   * @returns {boolean} 経過した：true 経過していない:false\r\n   */\r\n  get isOver() {\r\n    this.endTime = this.p5.millis();\r\n    return (this.p5.millis() > (this.timeLimit + this.startMillis));\r\n  }\r\n\r\n  get limit() {\r\n    return this.secGlass.getSeconds() + (this.secGlass.getMilliseconds() / 1000)\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/hourglass.js\n// module id = 10\n// module chunks = 0 1 2 4 5 6","\r\n/**\r\n * [Component] スコアラー\r\n * @property {Array} corrects - 正解の配列\r\n * @property {number} score - スコア（間違うとペナルティをうけます）\r\n * @property {number} correctCount - 正答数\r\n *\r\n */\r\nexport class Scorer {\r\n\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  constructor() {\r\n    this.corrects = [];\r\n    this.score = 0;\r\n    this.correctCount = 0;\r\n    this.rapTime = 0;\r\n    this.responseTimes = [];\r\n    this.isCorrects = [];\r\n  }\r\n\r\n  /**\r\n   * 問題の正解をcorrectsに追加します\r\n   * void\r\n   * @private\r\n   * @param {any} correct - 問題の正解\r\n   */\r\n  addCorrect(correct) {\r\n    this.corrects.push(correct);\r\n  }\r\n\r\n  /**\r\n   * correctsを初期化します\r\n   * void\r\n   */\r\n  formatCorrect() {\r\n    this.corrects = [];\r\n  }\r\n\r\n  /**\r\n   * N番目が正解かどうか\r\n   * @param {number} index - Nに相当する値\r\n   * @param {any} answer - 回答\r\n   * @returns {boolean} true: 正解である、false: 間違えてる\r\n   */\r\n  isCorrect(index, answer) {\r\n    return this.corrects[this.corrects.length - (1 + index)] === answer;\r\n  }\r\n\r\n  /**\r\n   * 最新が正解かどうか\r\n   * @param {any} answer - 回答\r\n   * @returns {boolean} true: 正解である、false: 間違えてる\r\n   */\r\n  isCorrectLastest(answer) {\r\n    return this.isCorrect(0, answer);\r\n  }\r\n\r\n  /**\r\n   * 回答が正解一覧に含まれているかどうか\r\n   * @param {any} answer - 回答\r\n   * @returns {boolean} true: 含まれている、false: 含まれていない\r\n   */\r\n  isIncludeCorrect(answer) {\r\n    return this.corrects.includes(answer);\r\n  }\r\n\r\n  /**\r\n   * 総合脳活性度を算出します\r\n   * @returns {number} 総合脳活性度\r\n   */\r\n  calcActiveness() {\r\n    return this.score * 1;\r\n  }\r\n\r\n  /**\r\n   * 正答率を算出します\r\n   * @returns {number} 正答率\r\n   */\r\n  calcPerCorrect() {\r\n    if (this.corrects.length === 0) {\r\n      return 0;\r\n    }\r\n    if (this.correctCount != 0) {\r\n      return this.correctCount / this.corrects.length;\r\n    }\r\n    return this.score / this.corrects.length;\r\n  }\r\n\r\n  /**\r\n   * NBackトレーニングにおける正答率を算出します\r\n   * @param {number} timeLimit - 制限時間\r\n   * @param {number} interval - 出題間隔\r\n   * @returns {number} 正答率\r\n   */\r\n  calcNbackPerCorrect(timeLimit, interval) {\r\n    var questionCount = timeLimit / interval;\r\n    return this.correctCount / questionCount;\r\n  }\r\n\r\n  get numOfCorrect() {\r\n    let count = 0;\r\n    this.isCorrects.forEach((v, i)=>{\r\n      if(v === true){\r\n        count += 1;\r\n      }\r\n    })\r\n    return count;\r\n  }\r\n\r\n  addResponseTime() {\r\n    this.responseTimes.push(Date.now() - this.rapTime)\r\n  }\r\n\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/scorer.js\n// module id = 11\n// module chunks = 0 1 2","/**\r\n * [Component] 正解\r\n * Libries:p5sound\r\n * @property {p5.Env} env エンベロープ\r\n * @property {p5.Oscillator} osc オシレータ\r\n * @property {Array} pattern フレーズに登録する楽譜\r\n * @property {p5.Phrase} phrase patternに基づいた再生フレーズ\r\n * @property {p5.Part} part パート（再生フレーズ,BPM）\r\n */\r\nexport class CorrectSound {\r\n\r\n  /**\r\n   * [p5sound] 再生音定義\r\n   */\r\n  constructor(p) {\r\n    this.p5 = p;\r\n    this.env = new p5.Envelope(0.000001, 0.1, 0.08, 0.1, 0.4, 0);\r\n    this.osc = new p5.Oscillator();\r\n    this.osc.setType('square');\r\n    this.osc.amp(0);\r\n    this.pattern = [2100, 0, 1660];\r\n    this.phrase = new p5.Phrase('correct', (t, p) => {this.makeSound(t, p)}, this.pattern);\r\n    this.part = new p5.Part();\r\n    this.part.addPhrase(this.phrase);\r\n    this.part.setBPM(95);\r\n  }\r\n\r\n  /**\r\n   * [p5sound] 音声生成\r\n   * @param {Number} time\r\n   * @param {Array} playbackRate 音高\r\n   */\r\n  makeSound(time, playbackRate) {\r\n    this.osc.freq(playbackRate);\r\n    this.osc.start();\r\n    this.env.play(this.osc);\r\n  }\r\n\r\n  /**\r\n   * [p5sound] 音声再生\r\n   * トレーニングからはこれを呼び出す\r\n   */\r\n  playSound(option = null) {\r\n    if (this.p5.theme.option.sound === \"off\" && option === null) return;\r\n    this.part.start();\r\n  }\r\n\r\n  /**\r\n   * [p5sound] 音声停止\r\n   * トレーニングからはこれを呼び出す\r\n   */\r\n  stopSound() {\r\n    this.part.stop();\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/sounds/correctsound.js\n// module id = 12\n// module chunks = 0 1 2","/**\r\n * [Component] 不正解\r\n * Libries:p5sound\r\n * @property {p5.Env} env エンベロープ\r\n * @property {p5.Oscillator} osc オシレータ\r\n * @property {array} pattern フレーズに登録する楽譜\r\n * @property {p5.Phrase} phrase patternに基づいた再生フレーズ\r\n * @property {p5.Part} part パート（再生フレーズ,BPM）\r\n */\r\nexport class WrongSound {\r\n\r\n  /**\r\n   * [p5sound] 再生音定義\r\n   *\r\n   */\r\n  constructor(p) {\r\n    this.p5 = p;\r\n    this.env = new p5.Envelope(0.00001, 0.1, 0.08, 0.1, 0.00001, 0.000001);\r\n    this.osc = new p5.Oscillator();\r\n    this.osc.setType('square');\r\n    this.osc.amp(0);\r\n    this.pattern = [250, 0, 250, 250, 250, 250];\r\n    this.phrase = new p5.Phrase('wrong',(t, p) => {this.makeSound(t, p)}, this.pattern);\r\n    this.part = new p5.Part();\r\n    this.part.addPhrase(this.phrase);\r\n    this.part.setBPM(180);\r\n  }\r\n\r\n  /**\r\n   * [p5sound] 音声生成\r\n   * @param {Number} time\r\n   * @param {Array} playbackRate 音高\r\n   */\r\n  makeSound(time, playbackRate) {\r\n    this.osc.freq(playbackRate);\r\n    this.osc.start();\r\n    this.env.play(this.osc);\r\n  }\r\n\r\n  /**\r\n   * [p5sound] 音声再生\r\n   * トレーニングからはこれを呼び出す\r\n   */\r\n  playSound(option = null) {\r\n    if (this.p5.theme.option.sound === \"off\" && option === null) return;\r\n    this.part.start();\r\n  }\r\n\r\n  /**\r\n   * [p5sound] 音声停止\r\n   * トレーニングからはこれを呼び出す\r\n   */\r\n  stopSound() {\r\n    this.part.stop();\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/sounds/wrongsound.js\n// module id = 13\n// module chunks = 0 1 2","import {Scorer} from \"./scorer.js\";\r\n\r\n/**\r\n * [Component] 順番記憶・数字記憶・音階記憶用スコアラー\r\n * @property {number} count - 現在対象のindex\r\n */\r\nexport class MemoryScorer extends Scorer {\r\n\r\n  /**\r\n   * 順番記憶・数字記憶・音階記憶用スコアラー\r\n   * @param {p5} p\r\n   * @param {Array} letters - 順序配列\r\n   */\r\n  constructor(p, letters) {\r\n    super();\r\n    this.count = 0;\r\n    this.isPerfect = true;\r\n  }\r\n\r\n  /**\r\n   * キー押下時数字キーか空白キーかを判別\r\n   * @param {event} e\r\n   * @param {function} callback\r\n   * @returns {any}\r\n   */\r\n  pressKey(e, callback) {\r\n    const answer = e.currentTarget.innerText;\r\n\r\n    switch (answer) {\r\n      case \"\":/* 空白キーは無視 */\r\n        return;\r\n      default:/* 数字キーの場合 */\r\n        return callback(answer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 回答が正解かどうか\r\n   * @param {string} answer - 回答\r\n   * @returns {boolean} true:正解 false:不正解\r\n   */\r\n  isCorrectCount(answer) {\r\n    return super.isCorrect(this.corrects.length - this.count - 1, answer);\r\n  }\r\n\r\n  /**\r\n   * 逆スパンの回答が正解かどうか\r\n   * @param {string} answer - 回答\r\n   * @returns {boolean} true:正解 false:不正解\r\n   */\r\n  isCorrectCountReverse(answer) {\r\n    return super.isCorrect(this.count, answer)\r\n  }\r\n\r\n  /**\r\n   * 正答数のカウント\r\n   */\r\n  plusCorrectCount() {\r\n    this.count += 1;\r\n    if (this.score < this.count)\r\n      this.score = this.count;\r\n  }\r\n\r\n  /**\r\n   * 出題された数字をすべて答えたかどうか\r\n   * @returns true:すべて押された false:まだ押されていないスプライトがある\r\n   */\r\n  isAllAnswered() {\r\n    return this.count == this.corrects.length;\r\n  }\r\n\r\n  /* カウントの初期化 */\r\n  resetCount() {\r\n    this.count = 0;\r\n  }\r\n\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/memoryscorer.js\n// module id = 18\n// module chunks = 1","/**\r\n * [Component] 20方眼\r\n * @property {p5} p5\r\n * @property {number} maxWidth - 描画対象とする横幅\r\n */\r\nexport class TwentyGrid {\r\n\r\n  /**\r\n   * [p5,p5dom]20方眼\r\n   * Componentを生成し、画面下部に描画します。\r\n   * @public\r\n   * @param {p5} p\r\n   * @param {Array} letters - 20方眼に表示させる20個の内容を持った配列\r\n   * @param {Object} [options]\r\n   */\r\n  constructor(p, letters, options = null) {\r\n    this.p5 = p;\r\n    this.options = options;\r\n    this.maxWidth = (p.windowWidth < p.windowHeight)\r\n      ? p.windowWidth\r\n      : p.pow(p.windowHeight, 2) / p.windowWidth;\r\n    this.isOver = false;\r\n    this.isLandscape = p.windowWidth > p.windowHeight;\r\n\r\n    // 20方眼用のDivを作成\r\n    let twentygrid = p.createDiv('');\r\n\r\n    letters.forEach((value, index) => {\r\n      twentygrid.child(this.createButton(value, index))\r\n    });\r\n\r\n    twentygrid.id(\"twentygrid\")\r\n      .style('position', 'fixed')\r\n      .style('text-align', 'center')\r\n    ;\r\n    if(this.isLandscape){\r\n      twentygrid.style('width', '45vw')\r\n        .style('right', '2.5vw')\r\n        .style('bottom', '15vh')\r\n    }else{\r\n      twentygrid.style('bottom', '5vh')\r\n        .style('width', (95 / 100) * this.maxWidth + 'px')\r\n        .style('left', p.width / 2 - ((95 / 200) * this.maxWidth) + 'px')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 各キー作成用\r\n   * [p5dom]createButtonメソッド\r\n   * @param {string} letter - キーに表示する値\r\n   * @param {number} id - id\r\n   * @returns {p5.dom} button dom element\r\n   */\r\n  createButton(letter, id) {\r\n    const p = this.p5;\r\n    let button = p.createButton(letter);\r\n\r\n    button.id(id)\r\n      .style('padding', '0px 0px')\r\n      .style('box-sizing', 'content-box')\r\n      .style('background-color', this.p5.theme.color.domKeyBackground)\r\n      .style('color', this.p5.theme.color.domKeyText)\r\n      .style('cursor', 'pointer')\r\n      .style('outline', 'solid 3px')\r\n      .style('outline-offset', '-2px')\r\n      .style('outline-color', this.p5.theme.color.domKeyOutline)\r\n      .style('margin', '0px')\r\n      .style('vertical-align', 'bottom')\r\n      .style('font-family', 'LocalFont')\r\n      .style('border', '0px')\r\n      .class('ripple')\r\n      .mousePressed(this.options.mouseClicked)\r\n    ;\r\n    if(this.isLandscape){\r\n      button.style('width', '9vw')\r\n        .style('height', '17.5vh')\r\n        .style('line-height', '17.5vh')\r\n        .style('font-size', '10vh')\r\n      } else {\r\n      button.style('width', (19 / 100) * this.maxWidth + 'px')\r\n        .style('height', '11vh')\r\n        .style('line-height', '11vh')\r\n        .style('font-size', (10 / 100) * this.maxWidth + 'px')\r\n    }\r\n\r\n    return button;\r\n  }\r\n\r\n  /**\r\n   * 正解配列点滅\r\n   * @param {Array} list - 点滅させる要素のidが順番に格納された配列\r\n   * @param {CorrectSound} sound - 点滅毎に鳴らす音\r\n   * @param {string} marker - 表示する文字\r\n   * @param {number} level - 3段階 出題間隔に関与\r\n   */\r\n  flashCorrects(list, sound, marker, level) {\r\n\r\n    for (let i = 0; i < list.length; i++) {\r\n      setTimeout(() => {\r\n        if (this.isOver) return;\r\n        this.flashPoint(list[i], 1000 / level, marker);\r\n        sound.playSound();\r\n      }, (1000 / level + 500) * i);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * [p5dom]指定id要素の点滅\r\n   * @param {number} id - 点滅させる要素のid\r\n   * @param {number} time - 点灯時間(ミリ秒)\r\n   * @param {string} marker - 表示する文字\r\n   */\r\n  flashPoint(id, time, marker) {\r\n    this.p5.select(\"#\" + id).html(marker);\r\n    setTimeout(() => {\r\n      if (this.isOver) return;\r\n      this.p5.select(\"#\" + id).html(\"\");\r\n    }, time);\r\n  }\r\n\r\n}\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/twentygrid.js\n// module id = 19\n// module chunks = 1","/**\r\n * [Component] フラッシュサウンド\r\n * Libries:p5sound\r\n * @property {p5.Env} env エンベロープ\r\n * @property {p5.Oscillator} osc オシレータ\r\n * @property {array} pattern フレーズに登録する楽譜\r\n * @property {p5.Phrase} phrase patternに基づいた再生フレーズ\r\n * @property {p5.Part} part パート（再生フレーズ,BPM）\r\n */\r\nexport class FlashSound {\r\n\r\n  /**\r\n   * [p5sound] 再生音定義\r\n   *\r\n   */\r\n  constructor(p) {\r\n    this.p5 = p;\r\n    this.env = new p5.Envelope(0.000001, 0.1, 0.05, 0.1, 0.00001, 0);\r\n    this.osc = new p5.Oscillator();\r\n    this.osc.setType('square');\r\n    this.osc.amp(0);\r\n    this.pattern = [1660];\r\n    this.phrase = new p5.Phrase('correct', (t, p) => {this.makeSound(t, p)}, this.pattern);\r\n    this.part = new p5.Part();\r\n    this.part.addPhrase(this.phrase);\r\n    this.part.setBPM(180);\r\n  }\r\n\r\n  /**\r\n   * [p5sound] 音声生成\r\n   * @param {Number} time\r\n   * @param {Array} playbackRate 音高\r\n   */\r\n  makeSound(time, playbackRate) {\r\n    this.osc.freq(playbackRate);\r\n    this.osc.start();\r\n    this.env.play(this.osc);\r\n  }\r\n\r\n  /**\r\n   * [p5sound] 音声再生\r\n   * トレーニングからはこれを呼び出す\r\n   */\r\n  playSound(option = null) {\r\n    if (this.p5.theme.option.sound === \"off\" && option === null) return;\r\n    this.part.start();\r\n  }\r\n\r\n  /**\r\n   * [p5sound] 音声停止\r\n   * トレーニングからはこれを呼び出す\r\n   */\r\n  stopSound() {\r\n    this.part.stop();\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/sounds/flashsound.js\n// module id = 20\n// module chunks = 1"],"sourceRoot":""}