{"version":3,"sources":["webpack:///./src/trainings/training.js","webpack:///./src/trainings/NFB001.js","webpack:///./config/theme.json","webpack:///./src/components/hourglass.js","webpack:///./src/components/scorer.js","webpack:///./src/components/sounds/correctsound.js","webpack:///./src/components/sounds/wrongsound.js","webpack:///./src/components/tenkey.js","webpack:///./src/components/calcurator.js","webpack:///./src/components/target.js","webpack:///./src/components/calcscorer.js"],"names":[],"mappings":";;;;;AAAA;AAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,aAAa;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA,CAAC;AAAA;AAAA;;;;;;;;ACtBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACQ;AACQ;AACR;AACQ;AACF;AACa;AACJ;AACd;;AAElD,yBAAyB,IAAI,OAAO;;AAEpC;AACA;AACA;AACA,cAAc,UAAU;AACxB,cAAc,WAAW;AACzB,cAAc,OAAO;AACrB,cAAc,UAAU;AACxB,cAAc,OAAO;AACrB,cAAc,aAAa;AAC3B,cAAc,WAAW;AACzB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA,qBAAqB,gDAAK;AAC1B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,2EAAS,wBAAwB,wEAAwE;AAClI,sBAAsB,qEAAM;AAC5B,0BAA0B,6EAAU;AACpC,0BAA0B,6EAAU;AACpC,4BAA4B,wFAAY;AACxC,0BAA0B,oFAAU;AACpC,sBAAsB,qEAAM;AAC5B;AACA;AACA;AACA,mDAAmD;AACnD,gFAAgF;AAChF,sFAAsF;AACtF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mCAAmC,kBAAkB,4BAA4B,2BAA2B;AAC5G;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA,sCAAsC,KAAK,MAAM;AACjD;AACA,aAAa;;AAEb;AACA;AACA;AACA,gFAAgF;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;;AAEb;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEO,qBAAqB,sDAAQ;;AAEpC,YAAY,iBAAiB;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,SAAS,wBAAwB;AACjC,mBAAmB;AACnB,uBAAuB;AACvB;AACA;AACA;AACA,CAAC;AAAA;AAAA;;;;;;;;;;;;;;AChPD,kBAAkB,SAAS,ofAAof,WAAW,iDAAiD,YAAY,qBAAqB,SAAS,kEAAkE,UAAU,+BAA+B,WAAW,YAAY,WAAW,mEAAmE,WAAW,sHAAsH,WAAW,yBAAyB,WAAW,YAAY,WAAW,YAAY,WAAW,YAAY,WAAW,mEAAmE,WAAW,YAAY,WAAW,8BAA8B,WAAW,4GAA4G,WAAW,yCAAyC,gFAAgF,WAAW,mFAAmF,WAAW,sFAAsF,WAAW,yFAAyF,WAAW,iFAAiF,WAAW,qFAAqF,WAAW,2DAA2D,gFAAgF,WAAW,oGAAoG,WAAW,4GAA4G,WAAW,YAAY,WAAW,YAAY,WAAW,YAAY,WAAW,6HAA6H,WAAW,YAAY,WAAW,YAAY,WAAW,YAAY,WAAW,YAAY,WAAW,4BAA4B,4CAA4C,EAAE,8CAA8C,EAAE,+CAA+C,EAAE,4CAA4C,EAAE,+CAA+C,EAAE,4CAA4C,EAAE,WAAW,YAAY,WAAW,YAAY,WAAW,YAAY,WAAW,YAAY,WAAW,YAAY,WAAW,YAAY,WAAW,4BAA4B,6CAA6C,EAAE,+CAA+C,EAAE,6CAA6C,G;;;;;;;ACA7rG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB;AACA;AACO;;AAEP;AACA;AACA,aAAa,GAAG;AAChB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA,sCAAsC,yCAAyC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,CAAC;AAAA;AAAA;;;;;;;;;;;;;;;;AC1ID;AACA;AACA,cAAc,MAAM;AACpB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,IAAI;AACjB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,IAAI;AACjB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,IAAI;AACjB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA,CAAC;AAAA;AAAA;;;;;;;;ACnHD;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,cAAc;AAC5B,cAAc,MAAM;AACpB,cAAc,UAAU;AACxB,cAAc,QAAQ;AACtB;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,qBAAqB;AAC3E;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA;AAAA;;;;;;;;ACtDD;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,cAAc;AAC5B,cAAc,MAAM;AACpB,cAAc,UAAU;AACxB,cAAc,QAAQ;AACtB;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,qBAAqB;AACxE;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA;AAAA;;;;;;;;ACvDD;AAAA;AAAkD;AAClD;AACA;AACA;AACA,cAAc,GAAG;AACjB,cAAc,OAAO;AACrB;AACO;;AAEP;AACA;AACA;AACA;AACA,aAAa,GAAG;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;;AAEA,CAAC;AAAA;AAAA;;;;;;;;;ACrJD;AACA;AACA;AACA,cAAc,GAAG;AACjB,cAAc,OAAO;AACrB;AACO;AACP;AACA;AACA;AACA,aAAa,GAAG;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,SAAS;AACtB,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA,CAAC;AAAA;AAAA;;;;;;;;AC9FD;AACA;AACA;AACA,cAAc,GAAG;AACjB,cAAc,OAAO;AACrB;AACO;;AAEP;AACA;AACA;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;;AAGA;;AAEA;AACA,CAAC;AAAA;AAAA;;;;;;;;ACpID;AAAmC;;AAE5B,yBAAyB,0DAAM;AACtC;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,cAAc;AACzC;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,SAAS;AACtB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;AAAA;AAAA","file":"0.js","sourcesContent":["export class Training{\r\n\r\n  constructor(userPreference) {\r\n    /* ユーザ設定の全体 */\r\n    this.userPreference = userPreference || {};\r\n    this.result = {};\r\n    this.scoreLog = {};\r\n  }\r\n  get uid(){ return null; }\r\n\r\n  /** ユーザ設定から個別トレーニング設定を取得 */\r\n  get preference(){\r\n    return this.userPreference[this.uid] || null;\r\n  }\r\n  /** ユーザ設定に個別トレーニング設定を保存 */\r\n  set preference(preference){\r\n    this.userPreference[this.uid] = preference;\r\n  }\r\n\r\n  get response(){\r\n    return {trainingResult: this.result, userPreference: this.userPreference, scoreLog: this.scoreLog};\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/trainings/training.js\n// module id = 0\n// module chunks = 0 1 2 3","import { Training } from './training.js';\r\nimport { TenKey } from '../components/tenkey.js';\r\nimport { Calcurator } from '../components/calcurator.js';\r\nimport { Target } from '../components/target.js';\r\nimport { CalcScorer } from '../components/calcscorer.js';\r\nimport { HourGlass } from '../components/hourglass.js';\r\nimport { CorrectSound } from '../components/sounds/correctsound.js';\r\nimport { WrongSound } from '../components/sounds/wrongsound.js';\r\nimport *  as theme from '../../config/theme.json';\r\n\r\nconst time_limit = 60000; //{number} トレーニングの制限時間\r\n\r\n/**\r\n * [トレーニングNFB001] 単純計算1\r\n * Libries: p5, p5sound, p5dom\r\n * @property {HourGlass} hourGlass - 砂時計\r\n * @property {CalcScorer} calcScorer - 単純計算用スコアラー\r\n * @property {Target} target - 問題表示エリア\r\n * @property {Calcrator} calcrator - 計算機\r\n * @property {Tenkey} tenkey - 10キー\r\n * @property {CorrectSound} correctSound - 正解音\r\n * @property {WrongSound} wrongSound - 不正解音\r\n * @property {number} maxWidth - 描画対象とする横幅\r\n * @property {number} alpha - 2問次の問題の透明度\r\n * @property {number} nextPositionY - 1問次の問題のY座標（vw）\r\n * @property {number} changeNextTimer - 問題を更新する処理を管理するsetInterval処理のID\r\n * @property {string} nextQuestion - 1問次の問題文\r\n * @property {string} doubleNextQuestion - 2問次の問題\r\n */\r\n\r\nclass SimpleCalculation1 {\r\n  constructor(p5, preference=null) {\r\n    this.$p5 = p5;\r\n    this.$p5.theme = theme;\r\n    this.level = preference ? preference.level : parseInt(p5.theme.NFB001.level);\r\n    this.waitingForReady = new Promise((resolve, reject) => {\r\n      this.ready = resolve;\r\n    });\r\n    this.waitingForStopped = new Promise((resolve, reject) => {\r\n      this.stop = resolve;\r\n    });\r\n    // this.maxWidth = (p5.windowWidth < p5.windowHeight)\r\n    //   ? p5.windowWidth\r\n    //   : p5.pow(p5.windowHeight, 2) / p5.windowWidth;\r\n    this.alpha = 255;\r\n    this.nextPositionY = 43;\r\n    this.animTimer;\r\n  }\r\n\r\n  /* [p5] preload処理 */\r\n  preload() {\r\n    if (this.$p5.theme.font)\r\n      this.font = this.$p5.loadFont(this.$p5.theme.font.path);\r\n    }\r\n\r\n  /* [p5] setup処理 */\r\n  setup() {\r\n    this.$p5.createCanvas(this.$p5.windowWidth, this.$p5.windowHeight);\r\n    this.$p5.frameRate(30);\r\n    this.$p5.noLoop();\r\n    if (this.$p5.theme.font)\r\n      this.$p5.textFont(this.font);\r\n    this.nextQuestion = \"\";\r\n    this.doubleNextQuestion = \"\";\r\n\r\n    this.hourGlass = new HourGlass(this.$p5, time_limit, {isReturnEnable:this.$p5.theme.option.isReturnEnable, isChangeColor:true});\r\n    this.target = new Target(this.$p5, true);\r\n    this.calcurator = new Calcurator(this.$p5);\r\n    this.calcScorer = new CalcScorer(this.level);\r\n    this.correctSound = new CorrectSound(this.$p5);\r\n    this.wrongSound = new WrongSound(this.$p5);\r\n    this.tenKey = new TenKey(this.$p5, {\r\n      mouseClicked: (e) => {\r\n        /* タッチした際の波紋 */\r\n        let x, y;\r\n        let cover = document.createElement('span'); //span作る\r\n        let coversize = document.getElementById(e.currentTarget.id).offsetWidth; //要素の幅を取得\r\n        let loc = document.getElementById(e.currentTarget.id).getBoundingClientRect(); //絶対座標の取得\r\n        if(e.clientX){\r\n          x = e.clientX - loc.left - window.pageXOffset - (coversize / 2);\r\n          y = e.clientY - loc.top - window.pageYOffset - (coversize / 2);\r\n        } else {\r\n          x = e.touches[0].clientX - loc.left - window.pageXOffset - (coversize / 2);\r\n          y = e.touches[0].clientY - loc.top - window.pageYOffset - (coversize / 2);\r\n        }\r\n        let pos = 'top:' + y + 'px; left:' + x + 'px; height:' + coversize + 'px; width:' + coversize + 'px;';\r\n        //spanを追加\r\n        document.getElementById(e.currentTarget.id).appendChild(cover);\r\n        cover.setAttribute('style', pos);\r\n        cover.setAttribute('class', 'rp-effect');//クラス名追加\r\n        // setTimeout(function() {\r\n        //   var list = document.getElementsByClassName( \"rp-effect\" ) ;\r\n        //   for(var i =list.length-1;i>=0; i--){//末尾から順にすべて削除\r\n        //     list[i].parentNode.removeChild(list[i]);\r\n        // }}, 500);\r\n\r\n        this.calcurator.input(e, () => {\r\n          let changeTime = this.$p5.millis();\r\n          let answer = this.$p5.select(\"#display\");\r\n          let isCorrect = this.calcScorer.isCorrect(2, parseInt(answer.html())); //正誤判定\r\n          this.calcScorer.isCorrects.push(isCorrect);\r\n          this.calcScorer.addResponseTime();\r\n          this.calcScorer.rapTime = Date.now();\r\n          if (isCorrect) {\r\n            /* テンキーの色を正解色に */\r\n            Array.prototype.forEach.call(document.getElementsByClassName(\"ripple\"), (button)=>{\r\n              button.style.color = this.$p5.theme.color.accent;\r\n            });\r\n            clearTimeout(this.animTimer);\r\n            this.animTimer = setTimeout(()=>{\r\n              Array.prototype.forEach.call(document.getElementsByClassName(\"ripple\"), (button)=>{\r\n                button.style.color = this.$p5.theme.color.domKeyOutline;\r\n              });\r\n            }, 300);\r\n\r\n            this.calcScorer.plusCorrectCount();\r\n            this.correctSound.playSound();\r\n          } else {\r\n            this.wrongSound.playSound();\r\n            this.calcScorer.penalty();\r\n            if (App.isAndroid && this.$p5.theme.option.vibe===\"on\") {\r\n              Android.vibeWrong();\r\n            }\r\n          }\r\n          this.target.update(this.nextQuestion);\r\n          this.target.updateNext(this.nextQuestion = this.doubleNextQuestion);\r\n          this.target.updateDoubleNext(this.doubleNextQuestion = this.calcScorer.question());\r\n          this.$p5.select(\"#display\").html(\"\"); //入力欄をクリア\r\n\r\n          this.alpha = 0;\r\n          this.nextPositionY = 32;\r\n          clearInterval(this.changeNextTimer);\r\n          /* 次以降の問題の位置を更新 */\r\n          this.changeNextTimer = setInterval(() => {\r\n            if (this.nextPositionY >= 43) {\r\n              this.alpha = (this.$p5.millis() - changeTime) * 255 / 500;\r\n              if (this.alpha > 255) return clearInterval(this.changeNextTimer);\r\n            } else {\r\n              this.nextPositionY = 32 + Math.min((this.$p5.millis() - changeTime) / 30, 43);\r\n            }\r\n          }, 33);\r\n        });\r\n      }\r\n    });\r\n    window.App.state = 'ready';\r\n    this.ready();\r\n  }\r\n\r\n  mousePressed() {\r\n    return false;\r\n  }\r\n\r\n  /* スタートボタン押下 */\r\n  start() {\r\n    this.hourGlass.start();\r\n    /* 問題を更新 */\r\n    this.target.update(this.calcScorer.question());\r\n    this.calcScorer.rapTime = Date.now();\r\n    this.target.updateNext(this.nextQuestion = this.calcScorer.question());\r\n    this.target.updateDoubleNext(this.doubleNextQuestion = this.calcScorer.question());\r\n  }\r\n\r\n  /* [p5] draw処理 */\r\n  draw() {\r\n    this.$p5.noCanvas();\r\n    this.$p5.createCanvas(this.$p5.windowWidth,this.$p5.windowHeight);\r\n    if (this.hourGlass) this.hourGlass.renderGlass();\r\n\r\n    this.maxWidth = (this.$p5.windowWidth < this.$p5.windowHeight)\r\n      ? this.$p5.windowWidth\r\n      : this.$p5.pow(this.$p5.windowHeight, 2) / this.$p5.windowWidth;\r\n\r\n    this.$p5.textAlign(this.$p5.CENTER);\r\n    this.$p5.textSize(this.maxWidth / 6.5);\r\n    this.$p5.smooth();\r\n    this.$p5.fill(97, this.alpha);\r\n    this.$p5.text(\r\n      this.doubleNextQuestion,\r\n      this.$p5.windowWidth * ((this.target.doubleNext.left+7) / 100),\r\n      this.$p5.windowHeight * (32 / 100) + this.maxWidth / 25\r\n    );\r\n    this.$p5.fill(\"#616161\")\r\n    this.$p5.text(\r\n      this.nextQuestion,\r\n      this.$p5.windowWidth * ((this.target.next.left+7) / 100),\r\n      this.$p5.windowHeight * (this.nextPositionY / 100) + this.maxWidth / 25\r\n    );\r\n\r\n    if (!this.hourGlass.isOver) return;\r\n    /* 終了処理 */\r\n    clearInterval(this.changeNextTimer);\r\n    this.correctSound.stopSound();\r\n    this.wrongSound.stopSound();\r\n    this.$p5.noLoop();\r\n    /* 難易度を設定 */\r\n    let l = this.level;\r\n    // const bias = this.level * 3;\r\n    // if (this.calcScorer.score >= (35-bias) && this.level < 3) {\r\n    //   l += 1;\r\n    // }\r\n    // if (this.calcScorer.score <= (20-bias) && this.level > 1) {\r\n    //   l -= 1;\r\n    // }\r\n\r\n    const scoreLog = {\r\n      isCorrects: this.calcScorer.isCorrects,\r\n      responseTimes: this.calcScorer.responseTimes\r\n    };\r\n\r\n    this.$p5.remove();\r\n    this.stop({\r\n      rawScore: this.calcScorer.score,\r\n      level: l,\r\n      scoreLog: scoreLog\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport class NFB001 extends Training{\r\n\r\n  get uid(){ return 'NFB001'; }\r\n\r\n  async start() {\r\n    new p5(($p5) => {\r\n      this.training = new SimpleCalculation1($p5, this.preference);\r\n      $p5.preload = this.training.preload.bind(this.training);\r\n      $p5.setup = this.training.setup.bind(this.training);\r\n      $p5.draw = this.training.draw.bind(this.training);\r\n      $p5.mousePressed = this.training.mousePressed.bind(this.training);\r\n    }, \"main\");\r\n    await this.training.waitingForReady;\r\n\r\n    this.training.start();\r\n    let {rawScore,level,scoreLog} = await this.training.waitingForStopped;\r\n    this.result = {rawScore};\r\n    this.preference = {level};\r\n    this.scoreLog = scoreLog;\r\n    return this.response;\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/trainings/NFB001.js\n// module id = 1\n// module chunks = 0","module.exports = {\"color\":{\"primary\":\"#ffe600\",\"secondary\":\"#ed7229\",\"positioner\":\"#ffffff\",\"positionerLight\":\"#ffffff\",\"positionerText\":\"#505050\",\"positionerPushedText\":\"#dfdfdf\",\"domKeyOutline\":\"#505050\",\"domKeyText\":\"#505050\",\"domKeyBackground\":\"#ffffff\",\"pushableFlash\":\"#ff0000\",\"insideCircle\":\"#e6e6e6\",\"outsideCircle\":\"#c8c8c8\",\"accent\":\"#37b595\",\"primaryText\":\"#606060\",\"secondaryText\":\"#424242\",\"accentText\":\"#000000\",\"background\":\"#ffffff\",\"empty\":\"#dfdfdf\",\"shadow\":\"#c5c5c6\",\"circles\":\"#ed7769\",\"crosses\":\"#22587a\"},\"option\":{\"vibe\":\"off\",\"sound\":\"on\",\"isReturnEnable\":false},\"tengrid\":{\"borderRadius\":\"0px\"},\"font\":{\"family\":\"LocalFont\",\"path\":\"./assets/font/mplus-1p-regular.woff\"},\"pulse\":{\"images\":null,\"ballImage\":null},\"NFB001\":{\"level\":\"2\"},\"NFB002\":{\"level\":\"2\",\"symbolList\":[\"〇\",\"☆\",\"▽\",\"■\",\"◇\",\"×\",\"△\",\"※\",\"◎\",\"□\"]},\"NFB003\":{\"level\":\"2\",\"pushList\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\"]]},\"NFB004\":{\"level\":\"3\",\"marker\":\"●\"},\"NFB005\":{\"level\":\"4\"},\"NFB006\":{\"level\":\"4\"},\"NFB007\":{\"level\":\"1\"},\"NFB008\":{\"level\":\"1\",\"symbolList\":[\"〇\",\"☆\",\"▽\",\"■\",\"◇\",\"×\",\"△\",\"※\",\"◎\",\"□\"]},\"NFB009\":{\"level\":\"1\"},\"NFB010\":{\"level\":\"3\",\"threshold\":\"500\"},\"NFB011\":{\"level\":\"2\",\"threshold\":\"500\",\"isUseImage\":true,\"iconfont\":\"tag_faces\",\"imagePath\":\"assets/image/face1.png\"},\"NFB012\":{\"level\":\"1\",\"isUseImage\":false,\"image1\":{\"iconfont\":\"tag_faces\",\"imagePath\":\"./assets/image/push1.png\",\"isPositive\":true},\"image2\":{\"iconfont\":\"tag_faces\",\"imagePath\":\"./assets/image/unpush1.png\",\"isPositive\":false},\"image3\":{\"iconfont\":\"brightness_high\",\"imagePath\":\"./assets/image/push2.png\",\"isPositive\":true},\"image4\":{\"iconfont\":\"brightness_high\",\"imagePath\":\"./assets/image/unpush2.png\",\"isPositive\":false},\"image5\":{\"iconfont\":\"bug_report\",\"imagePath\":\"./assets/image/push3.png\",\"isPositive\":true},\"image6\":{\"iconfont\":\"bug_report\",\"imagePath\":\"./assets/image/unpush3.png\",\"isPositive\":false}},\"NFB013\":{\"level\":\"1\",\"threshold\":\"1000\",\"isUseImage\":true,\"image1\":{\"iconfont\":\"tag_faces\",\"imagePath\":\"./assets/image/face1.png\",\"isPositive\":true},\"image2\":{\"iconfont\":\"sentiment_very_dissatisfied\",\"imagePath\":\"./assets/image/face2.png\",\"isPositive\":false}},\"NFB014\":{\"level\":\"1\",\"pushList\":[[\"1\",\"あ\",\"2\",\"い\",\"3\",\"う\",\"4\",\"え\",\"5\",\"お\",\"6\",\"か\",\"7\",\"き\",\"8\",\"く\",\"9\",\"け\",\"10\",\"こ\"]]},\"NFB015\":{\"level\":\"1\"},\"NFB016\":{\"level\":\"1\"},\"NFB017\":{\"level\":\"1\"},\"NFB018\":{\"level\":\"1\",\"threshold\":\"1000\",\"isUseImage\":false,\"iconfont\":\"star\",\"imagePath\":\"./assets/image/face1.png\",\"isPositive\":true},\"NFB019\":{\"level\":\"1\"},\"NFB020\":{\"level\":\"1\"},\"NFB021\":{\"level\":\"1\"},\"NFB022\":{\"level\":\"1\"},\"NFB023\":{\"level\":\"1\",\"flowingList\":[{\"name\":\"犬\",\"image\":\"./assets/image/dog.png\"},{\"name\":\"馬\",\"image\":\"./assets/image/horse.png\"},{\"name\":\"猿\",\"image\":\"./assets/image/monkey.png\"},{\"name\":\"猫\",\"image\":\"./assets/image/cat.png\"},{\"name\":\"兎\",\"image\":\"./assets/image/rabbit.png\"},{\"name\":\"鼠\",\"image\":\"./assets/image/rat.png\"}]},\"NFB024\":{\"level\":\"1\"},\"NFB025\":{\"level\":\"1\"},\"NFB026\":{\"level\":\"1\"},\"NFB027\":{\"level\":\"1\"},\"NFB028\":{\"level\":\"1\"},\"NFB029\":{\"level\":\"1\"},\"NFB030\":{\"level\":\"1\",\"flowingList\":[{\"name\":\"いぬ\",\"image\":\"./assets/image/dog.png\"},{\"name\":\"うま\",\"image\":\"./assets/image/horse.png\"},{\"name\":\"ねこ\",\"image\":\"./assets/image/cat.png\"}]}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/theme.json\n// module id = 9\n// module chunks = 0 1 2 4 5 6","const fully = '#66CC33';\r\nconst half = '#FFD400';\r\nconst scanty = '#FF3300';\r\nconst elapsed = '#848484';\r\n\r\n/**\r\n * 砂時計\r\n * Libries: p5\r\n * @property {number} startMillis - 開始タイミング\r\n * @property {number} timeLimit - 制限時間\r\n * @property {number} vh - ディスプレイの高さの1/100\r\n * @property {number} vw - ディスプレイの幅の1/100\r\n * @property {number} short - vhとvwの短い方\r\n * @property {boolean} isStart - スタートボタンが押されたかどうか\r\n *\r\n */\r\nexport class HourGlass {\r\n\r\n  /**\r\n   * 初期表示\r\n   * @param {p5} p\r\n   * @param {number} timeLimit - 制限時間\r\n   * @param {boolean} [isReturnEnable] - 戻るボタンの表示の有無\r\n   */\r\n  constructor(p, timeLimit, option = {isReturnEnable:false, isChangeColor:true}) {\r\n    this.p5 = p;\r\n    this.timeLimit = timeLimit;\r\n    this.option = option;\r\n    let shortView = p.windowHeight > p.windowWidth\r\n      ? 'vw'\r\n      : 'vh';\r\n    this.secGlass = new Date(this.timeLimit + this.startMillis - this.p5.millis());\r\n\r\n    // let div = p.createDiv('');\r\n    // div.id(\"hourglass\")\r\n    //   .style('position', 'fixed')\r\n    //   .style('top','10vw')\r\n    //   // .style('top', '7vw')\r\n    //   .style('left', '7vw')\r\n    //   .style('font-size', '3.5vw')\r\n    //   // .style('background-color', '#fff')\r\n    //   // .style('color', '#616161')\r\n    //   .style('width', '11vw')\r\n    //   .style('height', '11vw')\r\n    //   .style('border-radius', '50%')\r\n    //   .style('display', 'flex')\r\n    //   .style('align-items', 'center')\r\n    //   .style('justify-content', 'center')\r\n    //   .html(\"戻る\")\r\n    // ;\r\n    if (option.isReturnEnable) {\r\n      this.div = p.createButton('戻る')\r\n        .id(\"hourglass\")\r\n        .style('position', 'fixed')\r\n        // .style('top', '10vw')\r\n        .style('top', '4' + shortView)\r\n        .style('left', '4' + shortView)\r\n        .style('font-size', '3.5' + shortView)\r\n        .style('background-color', 'transparent')\r\n        // .style('color', '#616161')\r\n        .style('width', '17' + shortView)\r\n        .style('height', '17' + shortView)\r\n        // .style('border-radius', '50%')\r\n        .style('display', 'flex')\r\n        .style('align-items', 'center')\r\n        .style('justify-content', 'center')\r\n        .style('padding-top', '7' + shortView)\r\n        .style('border-style', 'none')\r\n        .mousePressed(() => {\r\n          if (App.isAndroid) Android.redo();\r\n        })\r\n      ;\r\n    }\r\n    this.isStart = false;\r\n  }\r\n\r\n  /**\r\n   * [p5] トレーニング開始時処理\r\n   */\r\n  start() {\r\n    this.startMillis = this.p5.millis();\r\n    this.p5.loop();\r\n    this.isStart = true;\r\n  }\r\n\r\n  /**\r\n   * [p5] 砂時計を描画\r\n   */\r\n  renderGlass(isVisible = true) {\r\n    this.vh = this.p5.windowHeight / 100;\r\n    this.vw = this.p5.windowWidth / 100;\r\n    this.short = this.p5.min(this.vh, this.vw);\r\n\r\n    // const hourglass = this.p5.select(\"#hourglass\");\r\n    this.secGlass = new Date(this.timeLimit + this.startMillis - this.p5.millis());\r\n    // let nowSec = (\"0\" + this.secGlass.getSeconds()).slice(-2);\r\n    // hourglass.html(\"戻る\");\r\n    /** 外枠部分 */\r\n    this.limitSec = this.timeLimit / 1000 - this.secGlass.getSeconds() - (this.secGlass.getMilliseconds() / 1000);\r\n    if (!isVisible)\r\n      return;\r\n    this.p5.noStroke();\r\n    this.p5.fill(fully);\r\n    if (this.option.isChangeColor && (this.timeLimit / 1000) / 2 > this.secGlass.getSeconds()){\r\n      this.p5.fill(half);\r\n    }\r\n    if (this.option.isChangeColor && (this.timeLimit / 1000) / 4 > this.secGlass.getSeconds()){\r\n      this.p5.fill(scanty);\r\n    }\r\n    this.p5.ellipseMode(this.p5.CORNER);\r\n    this.p5.ellipse(4 * this.short, 4 * this.short, 17 * this.short, 17 * this.short);\r\n    // this.p5.fill('#212121');\r\n    this.p5.fill(elapsed);\r\n    let rad = (360 / (this.timeLimit / 1000)) * this.limitSec * Math.PI / 180;\r\n    let s = -90 * Math.PI / 180;\r\n    if (this.isOver) {\r\n      this.p5.arc(4 * this.short, 4 * this.short, 17 * this.short, 17 * this.short, s, s - 0.001 )\r\n    } else {\r\n      this.p5.arc(4 * this.short, 4 * this.short, 17 * this.short, 17 * this.short, s, s + rad + 0.001);\r\n    }\r\n    // if (!this.isStart){\r\n    //   this.p5.select(\"#hourglass\").html(this.timeLimit / 1000);\r\n    // }\r\n    this.p5.ellipseMode(this.p5.CENTER);\r\n  }\r\n\r\n  /**\r\n   * [p5] タイムオーバー判定\r\n   * @returns {boolean} 経過した：true 経過していない:false\r\n   */\r\n  get isOver() {\r\n    this.endTime = this.p5.millis();\r\n    return (this.p5.millis() > (this.timeLimit + this.startMillis));\r\n  }\r\n\r\n  get limit() {\r\n    return this.secGlass.getSeconds() + (this.secGlass.getMilliseconds() / 1000)\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/hourglass.js\n// module id = 10\n// module chunks = 0 1 2 4 5 6","\r\n/**\r\n * [Component] スコアラー\r\n * @property {Array} corrects - 正解の配列\r\n * @property {number} score - スコア（間違うとペナルティをうけます）\r\n * @property {number} correctCount - 正答数\r\n *\r\n */\r\nexport class Scorer {\r\n\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  constructor() {\r\n    this.corrects = [];\r\n    this.score = 0;\r\n    this.correctCount = 0;\r\n    this.rapTime = 0;\r\n    this.responseTimes = [];\r\n    this.isCorrects = [];\r\n  }\r\n\r\n  /**\r\n   * 問題の正解をcorrectsに追加します\r\n   * void\r\n   * @private\r\n   * @param {any} correct - 問題の正解\r\n   */\r\n  addCorrect(correct) {\r\n    this.corrects.push(correct);\r\n  }\r\n\r\n  /**\r\n   * correctsを初期化します\r\n   * void\r\n   */\r\n  formatCorrect() {\r\n    this.corrects = [];\r\n  }\r\n\r\n  /**\r\n   * N番目が正解かどうか\r\n   * @param {number} index - Nに相当する値\r\n   * @param {any} answer - 回答\r\n   * @returns {boolean} true: 正解である、false: 間違えてる\r\n   */\r\n  isCorrect(index, answer) {\r\n    return this.corrects[this.corrects.length - (1 + index)] === answer;\r\n  }\r\n\r\n  /**\r\n   * 最新が正解かどうか\r\n   * @param {any} answer - 回答\r\n   * @returns {boolean} true: 正解である、false: 間違えてる\r\n   */\r\n  isCorrectLastest(answer) {\r\n    return this.isCorrect(0, answer);\r\n  }\r\n\r\n  /**\r\n   * 回答が正解一覧に含まれているかどうか\r\n   * @param {any} answer - 回答\r\n   * @returns {boolean} true: 含まれている、false: 含まれていない\r\n   */\r\n  isIncludeCorrect(answer) {\r\n    return this.corrects.includes(answer);\r\n  }\r\n\r\n  /**\r\n   * 総合脳活性度を算出します\r\n   * @returns {number} 総合脳活性度\r\n   */\r\n  calcActiveness() {\r\n    return this.score * 1;\r\n  }\r\n\r\n  /**\r\n   * 正答率を算出します\r\n   * @returns {number} 正答率\r\n   */\r\n  calcPerCorrect() {\r\n    if (this.corrects.length === 0) {\r\n      return 0;\r\n    }\r\n    if (this.correctCount != 0) {\r\n      return this.correctCount / this.corrects.length;\r\n    }\r\n    return this.score / this.corrects.length;\r\n  }\r\n\r\n  /**\r\n   * NBackトレーニングにおける正答率を算出します\r\n   * @param {number} timeLimit - 制限時間\r\n   * @param {number} interval - 出題間隔\r\n   * @returns {number} 正答率\r\n   */\r\n  calcNbackPerCorrect(timeLimit, interval) {\r\n    var questionCount = timeLimit / interval;\r\n    return this.correctCount / questionCount;\r\n  }\r\n\r\n  get numOfCorrect() {\r\n    let count = 0;\r\n    this.isCorrects.forEach((v, i)=>{\r\n      if(v === true){\r\n        count += 1;\r\n      }\r\n    })\r\n    return count;\r\n  }\r\n\r\n  addResponseTime() {\r\n    this.responseTimes.push(Date.now() - this.rapTime)\r\n  }\r\n\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/scorer.js\n// module id = 11\n// module chunks = 0 1 2","/**\r\n * [Component] 正解\r\n * Libries:p5sound\r\n * @property {p5.Env} env エンベロープ\r\n * @property {p5.Oscillator} osc オシレータ\r\n * @property {Array} pattern フレーズに登録する楽譜\r\n * @property {p5.Phrase} phrase patternに基づいた再生フレーズ\r\n * @property {p5.Part} part パート（再生フレーズ,BPM）\r\n */\r\nexport class CorrectSound {\r\n\r\n  /**\r\n   * [p5sound] 再生音定義\r\n   */\r\n  constructor(p) {\r\n    this.p5 = p;\r\n    this.env = new p5.Envelope(0.000001, 0.1, 0.08, 0.1, 0.4, 0);\r\n    this.osc = new p5.Oscillator();\r\n    this.osc.setType('square');\r\n    this.osc.amp(0);\r\n    this.pattern = [2100, 0, 1660];\r\n    this.phrase = new p5.Phrase('correct', (t, p) => {this.makeSound(t, p)}, this.pattern);\r\n    this.part = new p5.Part();\r\n    this.part.addPhrase(this.phrase);\r\n    this.part.setBPM(95);\r\n  }\r\n\r\n  /**\r\n   * [p5sound] 音声生成\r\n   * @param {Number} time\r\n   * @param {Array} playbackRate 音高\r\n   */\r\n  makeSound(time, playbackRate) {\r\n    this.osc.freq(playbackRate);\r\n    this.osc.start();\r\n    this.env.play(this.osc);\r\n  }\r\n\r\n  /**\r\n   * [p5sound] 音声再生\r\n   * トレーニングからはこれを呼び出す\r\n   */\r\n  playSound(option = null) {\r\n    if (this.p5.theme.option.sound === \"off\" && option === null) return;\r\n    this.part.start();\r\n  }\r\n\r\n  /**\r\n   * [p5sound] 音声停止\r\n   * トレーニングからはこれを呼び出す\r\n   */\r\n  stopSound() {\r\n    this.part.stop();\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/sounds/correctsound.js\n// module id = 12\n// module chunks = 0 1 2","/**\r\n * [Component] 不正解\r\n * Libries:p5sound\r\n * @property {p5.Env} env エンベロープ\r\n * @property {p5.Oscillator} osc オシレータ\r\n * @property {array} pattern フレーズに登録する楽譜\r\n * @property {p5.Phrase} phrase patternに基づいた再生フレーズ\r\n * @property {p5.Part} part パート（再生フレーズ,BPM）\r\n */\r\nexport class WrongSound {\r\n\r\n  /**\r\n   * [p5sound] 再生音定義\r\n   *\r\n   */\r\n  constructor(p) {\r\n    this.p5 = p;\r\n    this.env = new p5.Envelope(0.00001, 0.1, 0.08, 0.1, 0.00001, 0.000001);\r\n    this.osc = new p5.Oscillator();\r\n    this.osc.setType('square');\r\n    this.osc.amp(0);\r\n    this.pattern = [250, 0, 250, 250, 250, 250];\r\n    this.phrase = new p5.Phrase('wrong',(t, p) => {this.makeSound(t, p)}, this.pattern);\r\n    this.part = new p5.Part();\r\n    this.part.addPhrase(this.phrase);\r\n    this.part.setBPM(180);\r\n  }\r\n\r\n  /**\r\n   * [p5sound] 音声生成\r\n   * @param {Number} time\r\n   * @param {Array} playbackRate 音高\r\n   */\r\n  makeSound(time, playbackRate) {\r\n    this.osc.freq(playbackRate);\r\n    this.osc.start();\r\n    this.env.play(this.osc);\r\n  }\r\n\r\n  /**\r\n   * [p5sound] 音声再生\r\n   * トレーニングからはこれを呼び出す\r\n   */\r\n  playSound(option = null) {\r\n    if (this.p5.theme.option.sound === \"off\" && option === null) return;\r\n    this.part.start();\r\n  }\r\n\r\n  /**\r\n   * [p5sound] 音声停止\r\n   * トレーニングからはこれを呼び出す\r\n   */\r\n  stopSound() {\r\n    this.part.stop();\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/sounds/wrongsound.js\n// module id = 13\n// module chunks = 0 1 2","import *  as theme from '../../config/theme.json';\r\n/**\r\n * [Component] 10keyキーボード\r\n * Libries: p5, p5dom\r\n * @property {p5} p5\r\n * @property {number} maxWidth - 描画対象とする横幅\r\n */\r\nexport class TenKey {\r\n\r\n  /**\r\n   * [p5,p5dom] 10keyキーボード\r\n   * Componentを生成し、画面下部に描画します。\r\n   * @public\r\n   * @param {p5} p\r\n   * @param {Object} [options]\r\n   */\r\n  constructor(p, options = null) {\r\n    this.p5 = p;\r\n    this.options = options;\r\n    this.maxWidth = (p.windowWidth < p.windowHeight)\r\n      ? p.windowWidth\r\n      // : p.pow(p.windowHeight, 2) / p.windowWidth;\r\n      : p.windowWidth\r\n    this.isLandscape = p.windowWidth > p.windowHeight;\r\n\r\n    // 10キー用のDivを作成\r\n    let tenkey = p.createDiv('');\r\n    tenkey.child(this.createButton('', 's1'));\r\n    tenkey.child(this.createButton(\"1\", 1));\r\n    tenkey.child(this.createButton(\"2\", 2));\r\n    tenkey.child(this.createButton(\"3\", 3));\r\n    if (this.options.numOnly) {\r\n      tenkey.child(this.createButton('', 's2'));\r\n    } else {\r\n      tenkey.child(this.createButton('backspace', 'x', true));\r\n    }\r\n    tenkey.child(this.createButton('', 's3'));\r\n    tenkey.child(this.createButton(\"4\", 4));\r\n    tenkey.child(this.createButton(\"5\", 5));\r\n    tenkey.child(this.createButton(\"6\", 6));\r\n    tenkey.child(this.createButton('', 's4'));\r\n    tenkey.child(this.createButton('', 's5'));\r\n    tenkey.child(this.createButton(\"7\", 7));\r\n    tenkey.child(this.createButton(\"8\", 8));\r\n    tenkey.child(this.createButton(\"9\", 9));\r\n    tenkey.child(this.createButton('', 's6'));\r\n    tenkey.child(this.createButton('', 's7'));\r\n    tenkey.child(this.createButton('', 's8'));\r\n    tenkey.child(this.createButton(\"0\", 0));\r\n    tenkey.child(this.createButton('', 's9'));\r\n    if (this.options.numOnly) {\r\n      tenkey.child(this.createButton('', 's0'));\r\n    } else {\r\n      tenkey.child(this.createButton('keyboard_return', 'e', true));\r\n      // tenkey.child(this.createButton('check_circle', 'e', true));\r\n    }\r\n\r\n\r\n    tenkey.id(\"tenkey\")\r\n      .style('position', 'fixed')\r\n      .style('text-align', 'center')\r\n      .style('margin', 'auto')\r\n    ;\r\n    if(this.isLandscape){\r\n      tenkey.style('width', '45vw')\r\n        .style('right', '2.5vw')\r\n        .style('bottom', '15vh')\r\n    }else{\r\n      tenkey.style('bottom', '5vh')\r\n        .style('width', (95 / 100) * this.maxWidth + 'px')\r\n        .style('left', p.width / 2 - ((95 / 200) * this.maxWidth) + 'px')\r\n    }\r\n\r\n    if(this.options.top){\r\n      tenkey.style('top', '30vh');\r\n    }\r\n\r\n    if(this.options.dualSetting){\r\n      switch(this.options.dualSetting.whichSide){\r\n        case \"right\":\r\n          tenkey.style('left', p.width / 2 - ((95 / 200) * this.maxWidth) + this.maxWidth/2 + 'px');\r\n          break;\r\n        case \"left\":\r\n          tenkey.style('left', p.width / 2 - ((95 / 200) * this.maxWidth) - this.maxWidth/2 + 'px');\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * [p5dom] 各キー作成用\r\n   * createButtonメソッド\r\n   * @param {string} letter - キーに表示する値\r\n   * @param {number} id - id\r\n   * @param {boolean} [isMaterialIcons] - マテリアルアイコンを使用するかどうか\r\n   * @returns {p5.dom} button dom element\r\n   */\r\n  createButton(letter, id, isMaterialIcons = false) {\r\n    const p = this.p5;\r\n    let button = p.createButton(letter);\r\n\r\n    button.id(id)\r\n      .style('padding', '0px 0px')\r\n      .style('box-sizing', 'content-box')\r\n      .style('background-color', this.p5.theme.color.domKeyBackground)\r\n      .style('color', this.p5.theme.color.domKeyText)\r\n      .style('outline-color', this.p5.theme.color.domKeyOutline)\r\n      .style('cursor', 'pointer')\r\n      .style('outline', 'solid 3px')\r\n      .style('outline-offset', '-2px')\r\n      .style('margin', '0px 0px 0px 0px')\r\n      .style('vertical-align', 'bottom')\r\n      .style(\r\n        'font-family',\r\n        isMaterialIcons\r\n          ? 'Material Icons'\r\n          : 'LocalFont'\r\n      )\r\n      .style('border', '0px')\r\n      .class('ripple')\r\n      .mousePressed(this.options.mouseClicked)\r\n    ;\r\n\r\n    if(this.isLandscape){\r\n      button.style('width', '9vw')\r\n        .style('height', '17.5vh')\r\n        .style('line-height', '17.5vh')\r\n        .style('font-size', '10vh')\r\n      } else {\r\n      button.style('width', (19 / 100) * this.maxWidth + 'px')\r\n        .style('height', '11vh')\r\n        .style('line-height', '11vh')\r\n        .style('font-size', (10 / 100) * this.maxWidth + 'px')\r\n    }\r\n\r\n    return button;\r\n  }\r\n\r\n  /**\r\n   * [p5dom]10キーをシャッフル\r\n   * void\r\n   */\r\n  shuffleKey() {\r\n    let keyArray = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\r\n    for (let i = 0; i < 10; i++) {\r\n      this.p5.select(\"#\" + i).html(keyArray.splice(Math.floor(Math.random() * keyArray.length), 1)[0])\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/tenkey.js\n// module id = 14\n// module chunks = 0","/**\r\n * [Component] 計算器\r\n * Libries: p5, p5dom\r\n * @property {p5} p\r\n * @property {number} maxWidth - 描画対象とする横幅\r\n */\r\nexport class Calcurator {\r\n  /**\r\n   * [p5dom] 計算機\r\n   * Componentを生成し、中央上部に描画。\r\n   * @param {p5} p\r\n   */\r\n\r\n  constructor(p) {\r\n    this.p5 = p;\r\n    this.maxWidth = (p.windowWidth < p.windowHeight)\r\n      ? p.windowWidth\r\n      : p.pow(p.windowHeight, 2) / p.windowWidth;\r\n    this.isLandscape = p.windowWidth > p.windowHeight\r\n\r\n    let input = p.createDiv('');\r\n\r\n    input.id(\"display\")\r\n      .style('position', 'fixed')\r\n      .style('font-size', (18 / 100) * this.maxWidth + 'px')\r\n      .style('background-color', '#212121')\r\n      .style('color', '#fff')\r\n      .style('cursor', 'default')\r\n      .style('width', (40 / 100) * this.maxWidth + 'px')\r\n    //  .style('height', (20 / 100) * this.maxWidth + 'px')\r\n      .style('height', '15vh')\r\n      .style('left', p.windowWidth / 2 - ((20 / 100) * this.maxWidth) + 'px')\r\n      .style('top', '33vh')\r\n      .style('font-family', 'LocalFont')\r\n    //  .style('line-height', (20 / 100) * this.maxWidth + 'px')\r\n      .style('line-height', '15vh')\r\n      .style('text-align', 'center')\r\n    ;\r\n\r\n    if(this.isLandscape){\r\n      input.style('top', '50vh')\r\n      .style('left', '35vw')\r\n      .style('width','15vw')\r\n    }\r\n\r\n    let equal = p.createDiv('=');\r\n    equal.id(\"equal\")\r\n      .style('position', 'fixed')\r\n      .style('font-size', (18 / 100) * this.maxWidth + 'px')\r\n      .style('color', '#616161')\r\n      .style('width', '5vw')\r\n      .style('height', '15vh')\r\n      .style('top', '50vh')\r\n      .style('font-family', 'LocalFont')\r\n      .style('line-height', '15vh')\r\n      .style('text-align', 'center')\r\n      .style('left', '28vw')\r\n\r\n  }\r\n\r\n  /**\r\n   * [EventHandler,p5dom] 入力表示用displayメソッド\r\n   * 押下されたボタンの値を入力エリアに追加\r\n   * mousePressedからコールされるため、ここではスコープがp5.Elementに変化しています。\r\n   * @param {event} e\r\n   * @param {function} callback\r\n   * @returns {any}\r\n   */\r\n  input(e, callback = null) {\r\n    const input = this.p5.select(\"#display\");\r\n    const letter = e.currentTarget.innerText;\r\n\r\n    switch (letter) {\r\n      case 'backspace':/*文字を消す*/\r\n        if (input.html().length >= 2) {\r\n          return input.html(input.html().substr(0, input.html().length - 1));\r\n        } else {\r\n          return input.html(\"\");\r\n        }\r\n      case \"\":/* 無視 */\r\n        return;\r\n      case 'keyboard_return':/* 正誤判定 */\r\n        return callback();\r\n      default:/*文字を追加*/\r\n        if (input.html().length == 3) {\r\n          return;\r\n        } else if (input.html() == 0) {\r\n          return input.html(letter);\r\n        } else {\r\n          return input.html(input.html() + letter);\r\n        }\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/calcurator.js\n// module id = 15\n// module chunks = 0","/**\r\n * [Component] ターゲット\r\n * Libries: p5,p5dom\r\n * @property {p5} p5\r\n * @property {number} maxWidth - 描画対象とする横幅\r\n */\r\nexport class Target {\r\n\r\n  /**\r\n   * [p5dom] 表示領域の確保\r\n   * @public\r\n   * @param {p5} p\r\n   */\r\n  constructor(p, isDisplayNext = false) {\r\n    this.p5 = p;\r\n    this.maxWidth = (p.windowWidth < p.windowHeight)\r\n      ? p.windowWidth\r\n      : p.pow(p.windowHeight, 2) / p.windowWidth;\r\n    this.target = p.createDiv('');\r\n    this.next = p.createDiv('');\r\n    this.doubleNext = p.createDiv('');\r\n    this.isLandscape = p.windowWidth > p.windowHeight\r\n\r\n\r\n    this.target.id(\"target\")\r\n      .style('position', 'fixed')\r\n      .style('width', '100vw')\r\n      .style('height', '15vh')\r\n      .style('top', '15vh')\r\n      .style('font-size', (15 / 100) * this.maxWidth + 'px')\r\n      .style('color', '#616161')\r\n      .style('background-color', 'rgba(255, 255, 255, 0)')\r\n      .style('text-align', 'center')\r\n      .style('margin', 'auto')\r\n      .style('font-family', 'LocalFont')\r\n      .style('line-height', '15vh')\r\n    ;\r\n    if(this.isLandscape){\r\n      this.target.style('width', '14vw')\r\n      .style('top', '50vh')\r\n      .style('left', '13vw')\r\n      .style('outline', 'solid 2px')\r\n      .style('outline-offset', '-1px')\r\n      .style('outline-color', '#616161')\r\n    }\r\n\r\n    if (!isDisplayNext) return;\r\n\r\n    this.doubleNext.id('doubleNext')\r\n      .style('position', 'fixed')\r\n      .style('width', (25 / 100) * this.maxWidth + 'px')\r\n      .style('top', '1vh')\r\n      .style('left', p.width / 2 + (23 / 100) * this.maxWidth + 'px')\r\n      .style('color', 'rgba(255, 255, 255, 0)')\r\n      .style('background-color', 'rgba(255, 255, 255, 0)')\r\n      .style('text-align', 'center')\r\n      .style('font-family', 'LocalFont')\r\n      .style('padding', '0px 0px')\r\n      .style('height', '10vh')\r\n      .style('box-sizing', 'content-box')\r\n      .style('font-size', (9 / 100) * this.maxWidth + 'px')\r\n      // .style('outline', 'solid 2px')\r\n      // .style('outline-offset', '-1px')\r\n      // .style('outline-color', '#616161')\r\n      .style('line-height', '10vh')\r\n      .style('border', '0px')\r\n    ;\r\n\r\n    this.next.id(\"next\")\r\n      .style('position', 'fixed')\r\n      .style('width', (25 / 100) * this.maxWidth + 'px')\r\n      .style('top', '12vh')\r\n      .style('left', '73vw')\r\n      .style('color', 'rgba(255, 255, 255, 0)')\r\n      .style('background-color', 'rgba(255, 255, 255, 0)')\r\n      .style('text-align', 'center')\r\n      .style('font-family', 'LocalFont')\r\n      .style('padding', '0px 0px')\r\n      .style('height', '10vh')\r\n      .style('box-sizing', 'content-box')\r\n      .style('font-size', (9 / 100) * this.maxWidth + 'px')\r\n      // .style('outline', 'solid 2px')\r\n      // .style('outline-offset', '-1px')\r\n      // .style('outline-color', '#616161')\r\n      .style('line-height', '10vh')\r\n      .style('border', '0px')\r\n    ;\r\n\r\n    if(this.isLandscape){\r\n      this.next.style('top', '37vh')\r\n      .style('height', '12vh')\r\n      .style('width', '14vw')\r\n      .style('left', '13vw')\r\n\r\n      this.doubleNext.style('top', '24vh')\r\n      .style('height', '12vh')\r\n      .style('width', '14vw')\r\n      .style('left', '13vw')\r\n    }\r\n\r\n  }\r\n  /**\r\n   * 出題するvalueを更新します。\r\n   * @public\r\n   * @param {string} value ターゲットとなる値（記号や計算式など）\r\n   */\r\n  update(value) {\r\n    this.p5.select(\"#target\").html(value);\r\n  }\r\n\r\n  /**\r\n   * 1問次のvalueを更新します。\r\n   * @public\r\n   * @param {string} value ターゲットとなる値（記号や計算式など）\r\n   */\r\n  updateNext(value) {\r\n    this.p5.select(\"#next\").html(\"(\" + value + \")\");\r\n  }\r\n\r\n  /**\r\n   * 2問次のvalueを更新します。\r\n   * @public\r\n   * @param {string} value ターゲットとなる値（記号や計算式など）\r\n   */\r\n  updateDoubleNext(value) {\r\n    this.p5.select(\"#doubleNext\").html(\"(\" + value + \")\");\r\n  }\r\n\r\n\r\n  get setTemplate() {\r\n\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/target.js\n// module id = 16\n// module chunks = 0","import {Scorer} from \"./scorer.js\";\r\n\r\nexport class CalcScorer extends Scorer {\r\n  /**\r\n   * コンストラクタ\r\n   * @param {number} level - 3段階 符号の出題割合と問題桁数に関与\r\n   */\r\n  constructor(level = 1) {\r\n    super();\r\n    this.level = level;\r\n  }\r\n\r\n  /**\r\n   * 1桁どうしの四則演算を出題します。\r\n   * 数字はランダムに抽出されます。\r\n   * @param {string} [operator] - 演算子\r\n   * @returns {string} 提案された演算式\r\n   */\r\n  question(operator = null) {\r\n\r\n    if (operator === null)\r\n      var operator = this.operator();\r\n    let left = (this.level >= 3)\r\n      ? Math.floor(Math.random() * 20)\r\n      : Math.floor(Math.random() * 10);\r\n    let right = Math.floor(Math.random() * 10);\r\n    if (left === 0 && right === 0 && operator === '/')\r\n      return this.question(operator);\r\n    let answer = eval(left + operator + right);\r\n\r\n    /*０除算の防止、０未満・小数点ありの答えの防止 */\r\n    if (\r\n      operator === '/' && (right === 0 || left === 0)\r\n      || answer < 0\r\n      || !(Number.isInteger(answer))\r\n    ) {\r\n      return this.question(operator);\r\n    }\r\n    super.addCorrect(answer);\r\n    /* 計算式用に記号を変化 */\r\n    switch (operator) {\r\n      case '*':\r\n        operator = '×';\r\n        break;\r\n      case '/':\r\n        operator = '÷';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return left + operator + right ;\r\n  }\r\n\r\n  /**\r\n   * Nバック用の計算式出力\r\n   * 1桁同士の加減算を出題します\r\n   * @returns {string} 提案された演算式\r\n   */\r\n  questionNBack() {\r\n    var operator = this.operator();\r\n\r\n    let left = Math.floor(Math.random() * 10);\r\n    let right = Math.floor(Math.random() * 10);\r\n    if (operator === '/' || operator === '*') //乗除算はNG\r\n      return this.questionNBack();\r\n    let answer = eval(left + operator + right);\r\n\r\n    if (answer < 0 || answer >= 10) //0未満・2桁の答えの防止\r\n      return this.questionNBack();\r\n\r\n    super.addCorrect(answer);\r\n    return left + operator + right ;\r\n  }\r\n\r\n  /**\r\n   * 演算子をランダムに抽出します。\r\n   * @return {string} 演算子\r\n   */\r\n  operator() {\r\n    /* 重みづけした演算子配列 */\r\n    const opes = [['+', 1], ['-', 1], ['*', 4], ['/', 4]];\r\n    if (this.level >= 2) {\r\n    /* 重みづけの上演算子を抽出する */\r\n    let arr = [];\r\n      opes.forEach((v, i, a) => {\r\n        for (let index = 0; index < v[1]; index++) {\r\n          arr.push(v[0]);\r\n        }\r\n      });\r\n      return arr[Math.floor(Math.random() * arr.length)];\r\n    }\r\n    return opes[Math.floor(Math.random() * 4)][0];\r\n  }\r\n\r\n  /**\r\n   * 正答数のカウント\r\n   */\r\n  plusCorrectCount() {\r\n    this.score += 1;\r\n    this.correctCount += 1;\r\n  }\r\n\r\n  /* 不正解時ペナルティ */\r\n  penalty() {\r\n    if (this.score <= 0)\r\n      return;\r\n    this.score -= 1;\r\n  }\r\n\r\n    /**\r\n   * キー押下時数字キーか空白キーかを判別\r\n   * @param {event} e\r\n   * @param {function} callback\r\n   * @returns {any}\r\n   */\r\n  pressKey(e, callback) {\r\n    const answer = e.currentTarget.innerText;\r\n\r\n    switch (answer) {\r\n      case \"\":/* 空白キーは無視 */\r\n        return;\r\n      default:/* 数字キーの場合 */\r\n        return callback(answer);\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/calcscorer.js\n// module id = 17\n// module chunks = 0"],"sourceRoot":""}